Transcript


Search in video
Intro
0:00
so in this AI agent I'm taking Telegram messages these messages contain PDF
0:06
invoices as well as image receipts and we're stripping all of this information
0:11
off of the receipts that are images and off of the invoices which are PDF documents and we're uploading it into a
0:18
Google sheet line item by line item practically speaking how this works is this AI agent is going to receive
0:25
messages and it's going to call the right tool whether we're doc whether we're processing documents or we're
0:31
processing images it'll take that information into these two subflows here and here and then strip that info and
0:38
put it into a Google sheet let's try this out i'm going to upload first the
0:44
um the the PDF document and then we're going to try the image afterwards please
0:50
uh process this PDF document okay perfect and we're going to
0:57
go ahead and test this workflow out this image has gone through we're using the
1:02
AI agent to determine which action we want to take or tool in this case we're going to be processing a document and in
1:10
real time we should have this information populated onto our spreadsheet here now I'm just pulling out standard stuff like the name and the
1:17
price and the line item and keep in mind if there's multiple line items it would showcase multiple of these and the
1:22
invoice number and so on and so forth but you could literally populate whatever it is that you want we'll go
1:27
ahead and now test this out with the image so I'm going to go ahead and upload an image this time and it's going
1:33
to be that receipt please process this image
1:39
uh of a receipt perfect we'll circle back to our AI agent and this time we're
1:45
going to test with that image and now we're going down the image path and it's going going to pull out all of the line
1:52
items here so instead of just having one line item it's going to pull out four and create a row in our Google sheet for
1:59
every single one of these and so let's just cross reference this to make sure we're good we have 1999 1999 $24.99 and
2:07
$24 let's go back here 1999 1999 $24.99 and $24 so this looked good it grabbed
2:14
the total for everything as well which is awesome and so this kind of works out of the box we are going to be building
2:19
this from the ground up today using NADN and the blueprints are also going to be
2:25
free so if this is something like something that you're like holy crap like I want to use this i want to you
2:31
know be able to have this in my business or whatever all you have to do is hit these three dots here and then you can
2:37
just import from a file and the blueprints are going to be down below in the description absolutely for free so
2:42
with that being said we're going to be building this from the ground up starting right now okay so this build is
2:48
going to have three different workflows the first is going to be the main AI agent here where we're using Telegram to
2:54
send and retrieve messages the second one is going to be for processing images okay and then the third one is going to
3:02
be for processing PDF documents let's get into building this live right now
3:07
the first thing we're going to do is we're going to go over and create a new workflow and essentially what I want to
Creating the workflow
3:13
do is start with the trigger where are we actually receiving information from and there's lots of different triggers
3:18
here i mean like I'm going to use Telegram for today but you could also use WhatsApp you could also use Twilio
3:25
twilio is like a text messaging platform so you could do this via text messages as well you could even do this using
3:31
Siri i mean there's just a or Facebook Messenger although that would probably be a bit more complicated on NA to end
3:37
at the time of this recording but there's a lot of different options here but just the easiest one to like actually get up and running would be
Telegram trigger
3:43
Telegram and for that reason I'm going to be using this and the trigger that we want to use and triggers are all these
3:48
like lightning bolts here right just meaning that it's going to start this workflow when one of these things
3:53
happened happens and the condition we want to choose is on message so that just means when we receive a message
3:58
then it's going to work and so the first thing that I want to do is I want to set up this Twilio or Telegram uh
4:05
credentials here just so that we can actually start receiving messages from our Twilio account and when we receive
4:11
these messages then it's going to automatically start this particular workflow here and how we do that is by
4:17
connecting in another account so um you can see just like the disgusting amount of accounts that I've connected in
4:23
should probably go ahead and delete those but um part of me just wants to get up to like a 100 i don't know we'll see how far I can take it but what we're
4:30
going to do is we need this uh uh access token and we can find this in the open
4:35
docs module here and so this is just the documentation from Nadn telling us how
4:40
we can go ahead and set this up and essentially all we have to do is just follow their um access token
4:46
documentation here and so the first thing we need to do is create a chat with the bot father the bot father
4:53
cracks me up every time um sweet and then this is just going to prompt us to open Telegram on our computer or
4:59
whatever and you'll have to go ahead and create or or get Telegram it is absolutely free and it takes a couple
5:04
seconds to download you can get this in like the app store or whatever um but I'm I already have it so I'm just going to go forward with this and essentially
5:11
it's going to open this conversation up to the botfather up here and from there
5:16
we just need to essentially close this tab and just follow the rest of the instructions um we'll grab this new bot
5:22
command here / newbot and we'll plug it in here and this is going to create a
5:27
new bot for us we need to do two things the first thing is we need to choose a name for that and then um we're going to
5:35
choose a username and so for me I'm going to do botfather fan club as my uh
5:41
name and then I'm going to do botfather fan clubbot at the end here and that's
5:47
pretty much it we have our official bot created this is our access token right
5:53
here so um you can see me where we're we're like I'm hovering over this so we're just going to copy this and then
5:59
we're going to delete or circle or we're just going to close the uh documentation and paste that access token right in
6:05
here and then we are good to go so we'll save that and this is connected in and now
6:11
anytime we receive a message from there uh from Telegram we are going to receive
6:16
it here so we can go ahead and test this out by clicking test step and what I want to do is just click this t.me
6:25
uh botfather fan club bot here it's going to start a new message when we
6:30
click start here and now we can see that message right here we can go ahead and
6:35
test it again and I'll just put test here and now we have the message test
6:41
and we're already receiving messages from Telegram into NAD in a matter of a couple minutes so that's pretty cool now
6:48
specifically what I want to do is I want to focus not just on text messages but I
6:54
want to focus on PDF messages or image messages or more I I guess more like
7:01
file messages right so we'll circle back to Telegram we're going to test the step out again and this time what we're going
7:08
to do is we're going to upload a document and I will include both of these in the uh in the blueprints as
7:16
well if you guys want to use these exact files but anyways I'm going to go ahead and I'm going to attach a file down here
7:22
and I'm going to upload one of I'm going to choose specifically the file just you
7:27
can choose photo but just the way the data is formatted is slightly differently so I would recommend
7:32
choosing file here if you want to have the exact same setup as I do in this and we're going to choose this uh PDF
7:39
document i'm just going to say process this PDF document and we'll click send
7:45
and we can see down here it's been sent and circling back into our NAD platform
7:52
we have all the data as the output over here which is cool so we're already um
7:58
we're already doing pretty well here now the only thing is is before I actually continue on with this workflow what I
8:03
want to do is just pin this data and if we open this up we have this pin button here and that means that we don't have
8:09
to circle back and forth between Telegram and NA every single time we want to change things or send another
8:15
message it's just going to mean that we can move forward so much quicker next thing we'll do is we'll connect in an AI
AI agent
8:21
agent and so with this AI agent um what we need to do is first of all just
8:28
change this text down here so this um you can think about the AI Asians as
8:34
just like you know um essentially a tool that you uh that will will be able to do
8:40
whatever it is that you want you can it can have a brain a memory and tools and essentially using the brain and using a
8:47
a memory of past messages you've been sending back and forth it can select the right tools to get the job done so those
8:53
tools could be processing an image invoice or receipt or processing a PDF invoice or receipt and so um out of the
9:01
box this almost works we just need to make sure that the prompt we're giving it is correct and when the text is red
9:08
here it means it's not correct and we got to change it otherwise it's not going to work and so what's going on here is that usually when you're using
9:15
AI agents in ChatgBT or sorry in in NAN oh my gosh the names just uh all blur
9:21
together after a certain point in time but um when you're using this it expects the trigger to be like this on message
9:28
send which is like the default if you will NAN messaging platform but we're
9:34
using something else so if you're using Telegram Twilio WhatsApp Facebook Messenger whatever it is that's not that
9:39
default messenger we're going to have to change this particular chat um prompt and how we do that is we have to connect
9:46
another source okay and so instead of connecting the chat node we're going to define it below and it's going to ask us
9:53
hey we need to include a message here like what message is it that we want to send in this AI agent for it to process
10:00
and that message is going to be this caption here okay so if we look over at
10:05
the initial message we had we had processed this PDF document and that is the caption which is right here which we
10:13
can see down here as well and so that's good we're good to go here and as I was
10:18
mentioning with these AI agents they do have a model chat model memory and tool
10:24
and so with the chat model um you can choose whatever it is you want i'm just going to be boring and choose OpenAI's
10:29
uh chat model here just because well I always use it and uh I'm just familiar with it and you can select whatever
10:36
model you want but you can think about this as and I'm just going to leave this as it is but you can think about this like the brain of the operation so this
10:43
is going to be what essentially receives that message and how it what processes
10:48
the initial message any responses that it sends back it's going to go through here and it's going to formulate that response you can think about this like
10:55
literally just chat GPT in in a sense and so we're going to move this over to the side we're good to go there with the
11:01
memory we can use window buffer memory uh in all honesty we don't even need this for the setup but I'm going to
11:07
include it anyways what window buffer memory is is it's just essentially the AI agent's ability to recall past
11:15
messages just like chat GBT you can ask it multiple messages and it's not only going to answer based on your previous
11:22
like the last message but all the messages that came before it as well and so with this we just need to change one
11:29
modification it's trying to pull in the trigger uh like the chat trigger node
11:35
but because we switched this over to Telegram just like before we need to define the particular chat key and how
11:43
we can do this is we can grab this chat ID here and this chat ID is just a
11:49
unique ID to that chat window what this is essentially saying is that we need to
11:54
store like a thread ID or an ID associated with this whole chat window
11:59
that's unique so that anytime it identifies this chat it knows that hey it's this this particular chat because
12:06
you could upload 50,000 receipts but you know it needs to understand okay which
12:12
thread is this a part of and and it's going to know that right based on this particular chat ID and so this kind of
12:19
distinguishes you from literally every other person also using telegram in the world so that's more or less the chat ID
12:27
here and then we can uh we can just um do we're going to do two more steps
12:33
we're going to add some tools in here for like the processing of the images and the processing of the PDF receipts
12:38
just before we do that I want to connect this up so that we can send messages back and forth and receive them back in
12:43
Telegram so we're going to hit this plus button here and we're going to choose Telegram and so what we're doing here is
12:49
we're sending a message back to ourselves after that Telegram after the results have come in so we'll choose
12:57
send a text message and um yeah we just
13:02
need two things which is the chat ID so that we can connect it back into this particular chat it knows where to send
13:08
that message to and we also need to include the text message now typically there should be data in in here on the
13:15
left side for us to pull from but we don't have that so we just need to run this workflow one time before to load
13:22
some test data in so I'm going to test this run we can see here that we uh ran
13:27
into an error and that is also because I have like 17 million different
13:33
OpenAI API tokens here and I connected one end that uh no longer works because
13:39
I was furiously deleting them the other day cuz I was like man I just have way too many uh it's like I I always create these API tokens like every single video
13:46
I do and uh yeah I just forget to delete them sometimes which is a good reminder that if you need an API token and it
13:53
didn't work here you can go over to platform.openai.com and you can sign in
13:59
to your account and then from the dashboard down here we can circle over to API keys and we can create an API key
14:08
here and so once you create this I'm just going to call this 1 2 3 4 test we
14:13
could create the secret key and then we could essentially copy that in and similarly to before we could create
14:20
credentials and enter that API key right in here and so that's essentially more or less how the API keys work with
14:27
ChatGBT you will need to add $5 onto this um if you want to use something like ChatGBT i think you could use Croc
14:34
potentially for free if you want to bypass that but um but yeah the minimum payment to the Chat GBT API is $5 and
14:41
that's a different fee than having a ChatGBT subscription okay so we're good to go here i just updated this and we'll
14:47
test this one more time and it looks like the workflow was successful everything's good to go if we now
14:53
connect these back in together we should see the data on the left side here and so all we need to do is just map this in
Telegram response
15:00
and mapping is just taking past results from previous modules and then putting them in the correct fields and so what
15:07
I'm going to do is I'm going to enter in the chat ID in the chat ID section and then in the text section we can just
15:13
have we can just enter in the output of the AI agent and this is the message we're going to send back that the AI agent has generated for us and it says
15:20
I'm unable to process PDF documents directly however I can help you with questions summarize the content or
15:25
assist you with any specific information you may need okay cool and we can just test this one more time just to make
15:31
sure that message is coming through okay sweet so this is good i just don't like
15:36
this message was sent from automatically with Nad so I'm just going to go ahead and remove that so we're going to open
15:41
up this module we're going to add down at the bottom here um we're going to say
15:47
we're going to choose append nadn attribution and we're going to turn that bad boy off because nobody likes that i don't know why they put that there
15:53
obviously I know why they put that there they want to market their stuff but um I don't want to be receiving that every
15:58
single message I get back okay cool so that's more or less it um and then we
16:03
can go ahead and we can enter in a prompt here and so with this prompt I'm
16:09
actually just going to copy it over from my past module just to kind of speed up some time here and then walk you through
16:16
what it means we need to add like a system prompt here and so if we add options we can choose system message and
16:23
this is just providing context to the AI agent i'm going to flip this over to
16:28
expression over here just so we get access to this like button down here so that we can open up a bit bigger and I'm
16:35
going to say in my system prompt your helpful assistant named uh okay this uh
16:42
was like a combination of two different um prompts but I'm going to say your
16:47
helpful assistant um named Jonno I guess after me um and your task is to handle
16:53
intelligent document processing um tools number one call the document processing
16:59
tool to handle OCR for PDF document processing and number two call the image processing tool to handle an OCR for
17:06
image processing when user calls this tool please start it immediately the image will be passed through an ID um
17:14
and processed on the sub agent no need to verify so what what's what's going on here well I'm defining two tools one is
17:20
for processing PDFs one is for processing images and in both instances
17:25
we're using something called OCR to extract the data and over here I'm just
17:31
saying like hey you don't need to verify this cuz sometimes it'll be like hey you need to upload the PDF or you need to
17:36
upload the image but the problem with this is is that we're not actually
17:42
executing the extraction of data from that image or PDF before this AI agent
17:48
it's expecting this stuff to be here before it lands at this stage but we're actually not doing this at this stage
17:55
we're going to have subtools that kind of do this for us and so for that reason
18:01
um it might get confused being like hey I don't have the data that you're telling me I should have but that's okay
18:07
because we're just passing in the ID of the file here to these subtools and then during these subtools what we're going
18:13
to do is grab the the file and then um we're going to process it there which uh
18:19
means that we're good to go here so we're all set now what we can do is we
18:24
can save this and create a second flow and this second flow is going to be for
Subagent for processing files
18:30
creating these um or for for processing these PDF files and so on this we're
18:37
going to add a first step here and this is going to be executed by another
18:42
workflow over here just meaning that we're calling this workflow from our main AI agent what I mean by calling is
18:49
it's only going to start when we ask it to be started over here so we'll go ahead and um input data mode and so with
18:59
this we can define the parameters that we want to pass from this AI agent into
19:05
here so like because we have like unstructured an unstructured message here and what we're getting here is
19:12
essentially the ID of this file and we're getting in the message here and this is in an unstructured format
19:18
because there's no structure to it like it could come in any single like this message that we send here um it could
19:25
contain anything like an a million in one things or a trillion or an infinite amount of things and so because there's
19:31
just there there's just so many possibilities of how that data could be structured it it's it's unstructured and
19:38
we want to more or less um be able to pull out certain things like that image
19:44
uh ID and information from that from that text like the actual message or the
19:50
context of what we're trying to do and so we need to pass that information from here through the tool into this sub
19:57
agent and here we're going to define what it is that we're actually looking to grab and so I'm going to delete these
20:03
two because there's just two things that I want to grab number one is I want to grab the ID of the file and number two
20:10
is I want to grab the message and this message is just what we're asking it to do okay so that looks good to me and um
20:19
that's it for this module we're just defining what is going to be passed from the main AI agent here into the
20:25
secondary subflow here and we can actually go ahead and connect these in and how we do that is by clicking the
20:31
tools section down here and then we're going to call another NAD workflow over on the side here and so with this we're
20:39
going to go ahead and just um first of all name this PDF processor or whatever
20:46
it is that you want and this is going to be um PDF
20:53
uh tool actually let me just see yeah PDF tool and then I'm going to provide a
20:58
description what this description is essentially saying is like how do you want to tell the AI agent when to use
21:05
this tool or when to say you should choose this tool out of all the other ones and so I'm going to say call this tool if the user is looking to
21:15
process or extract data from a PDF document okay cool and then we're
21:23
going to connect it to this particular subworkflow down here and so we can just choose from the list here and I have
21:30
changed this to my document my workflow 38 it's probably not the best name so I'm going to call this um PDF documents
21:38
and then we can actually copy this name and just paste it in the search button
21:43
here it's not coming up because um I saved it after this um after I searched
21:49
for it so I'm just going to close it and then open it back up again and now it should appear and so we have the message
21:55
here and we have the ID here and so this is looking pretty good we can pass in
22:00
the file ID from down below here okay and so that's going to be in the file ID that we're passing through and the
22:06
message is just going to be the caption which is process this PDF document sweet
22:12
so now when we send a message from telegram which would contain something
22:17
like this which is the file ID of the image or the PDF document and the
22:23
caption here that's going to be passed through this AI agent to the PDF processor and then it's going to be
22:28
caught right over here as well okay so we're making good progress um the next
22:35
thing that I want to do here is I actually want to put in some mock data here just
22:42
because what I don't want to do is always have to send messages here and then wait for this to happen and then
22:48
come over here and it's just like it's a nightmare that um that will take like a
22:55
30 minute build and turn it into something that takes like two hours so what we're going to do is we're just
23:00
going to put in some sample data here just to speed this up significantly and uh I'm going to first of all copy this
23:07
file ID here and we're going to paste this in here and we can see that uh it's
23:14
added this quotation onto a new line here so I'm just going to back that up
23:19
and then we have a message which is process this PDF document i'll copy that throw it in the message file here and
23:26
we're good to go i'm going to click save and now if we run this we uh we have all
23:32
the information coming through which is nice and so the next thing that I'm going to do is I'm going to go back to
23:38
Telegram and I actually want to download that file so I'm going to choose the get
23:44
a file button here or action here and we can pass in this ID right through here
23:51
to the um file section here which means that we're now going to download this file from this sub aent so we can go
23:58
ahead test this out and now we have the data over here okay perfect so now this
24:04
has been downloaded and the next thing that I want to do is I want to um and we
24:10
can just take a look at this actually so I'm just going to download this and we'll open this up in a new tab so we
24:16
have the same PDF as what we started with over here right which is pretty
24:22
nice so what I want to do is I want to get these line items from here and I
24:28
want to add these to a Google sheet but we need to identify like we need to we need to first of all turn this from a
24:35
PDF document into text and then once we get the text we need to actually get the
24:40
right text and enter that into a Google sheet so how we're going to do this is a
24:45
multi-step approach the first thing we're going to do is select open AI and
24:51
we're going to use uh oops actually it's not going to be open AI we're going to
24:56
extract from a file so the first thing is is we're going to extract from a PDF
25:02
file we're going to turn this from a PDF into text here okay so let's go ahead
25:08
and let's try this out so I've ran this i've downloaded that file which we can see over here and then I have extracted
25:17
from a PDF and if I switch this over to JSON data up top here we can see the text here and so we can just cross
25:24
reference this invoice payment is due within 30 days from the date of the invoice let's go back here
25:32
um now let me just take a look and see
25:37
where that Okay so it's pulling it in from here payment is due from 30 days from the invoice late payment is subject
25:44
to a 5% monthly fee and okay gotcha so it's starting to pull in information i
25:50
don't know why it starts at the bottom there but apparently it does um cool and
25:55
so it's pulling in all of this data here right it's converted this whole thing
26:01
into text and now what we want to do is and this is kind of what I was referring
26:07
to earlier when I was saying it's unstructured right we just have this massive blob of text but it's not really
26:12
that useful because it's just like this massive brick wall of just
26:17
nothingness and it's like you know we want to take this unstructured data and we want to structure it and when I mean
26:23
structure it I mean like we want to have it go into these columns here name price
26:29
line item invoice number quantity invoice total date right so we're taking
26:34
a block of text and we're migrating it over to a format like this and so how we
26:39
do that is we use open AI or chatgbt um and we're going to message a model here
26:46
this is just a fancy way of saying that we're going to use generative AI to do something generative AI you can think of
26:53
like we're using AI to generate us an output of data that's structured and so
27:00
um let's talk about this what I mean by data and being structured but I'm gonna kind of answer that through setting up
27:07
this OpenAI module here and so first things first we're going to um check our
27:13
credentials and make sure that I in fact have the right account connected in because it's not OpenAI number seven
27:18
anymore but uh I'm going to choose the right account here select a model
27:24
um you can really like for me I'm just going to use 40 mini just because it's um uh yeah it's just it works and uh
27:34
mini just means that it's going to take up less credits which means it's going to charge you less to roll this out and
27:40
we're going to use three messages here the first one is going to be a system message then a user message and then a
27:47
assistant message you can see that there's three messages total here you can honestly think about like
27:53
OpenAI you guys did the worst freaking job naming these things i have no like you took something that was simple and
27:59
you made it so freaking complicated um I just don't understand it's like it's like going to university and like trying
28:05
to read like a post-docctorate message where you're just like are you writing this way because it's actually that
28:10
complicated or you're just trying to make yourself sound smarter than you actually are um kind of one of those situations and so essentially um you can
28:18
think about this like input output and the parameters here or the context or
28:24
the settings so the user message here is the input what are we inputting into
28:30
this scenario the assistant message is the output what what are we trying like we're defining how we want the output to
28:37
be structured and then with the system message this is just the parameters or
28:43
the additional context that you're providing to the model for it to understand what it is that you're
28:48
actually freaking trying to do in the first place so that's more or less how I like to think about it in the system
28:53
message I I'm just going to say you're an intelligent bot that is capable that is
29:02
fantastic oops at pulling out data from um
29:11
text and I'm going to say JSON data from text essentially that and we'll drag
29:18
this down a bit you actually I'm going to say from invoices or receipts or documents so
29:28
that's essentially just providing context to it and then for the text I'm going to say here is the
29:34
document you need to pull data from and
29:39
we'll flip this over to JSON here and then pass in this text which is just this massive wall of text so we'll go
29:45
ahead and do that so we're actually giving it the input which is what is it like what is the actual text that we're
29:52
trying to work with here and then we need to structure the output here how is it how do we want this data to go from
30:00
unstructured to structured which brings me back to the question or the the statement I made earlier is we're going
30:05
to talk about structuring unstructured data and we do this through the assistant message here so the first
30:11
thing is is I'm going to say I want you to output this data as JSON data in the
30:19
following format now what JSON data is and I have a whole video on this it's one of the most boring things that
30:25
people hate watching but is the probably the number one most useful thing that people can learn in NAN because I
30:32
consult hundreds of pe hundreds of businesses every single month i would say the vast majority of the problems
30:38
people come to me with is like literally mostly concentrated around JSON data so it's it's just tremendously useful to
30:44
know but this is just a way to format information csv files are way of
30:50
formatting information as well json data is just this on the left hand side this
30:55
is essentially the backbone of NADN and so we don't have to know how to do this we just have to know what we want and so
31:01
if we open up chat GBT here and I I can just ask it to generate me JSON data so
31:09
please and I say please here just because I'm Canadian and you always every Canadian says please when
31:15
interacting with AI uh please generate me JSON data
31:21
um for a uh a standard invoice please generate me sample JSON data for a a
31:29
standard invoice and so it's just going to do all of the heavy lifting for us and we can go ahead and we can grab all
31:35
this information here and so you can like add things in here if it doesn't
31:41
cover everything you're looking for you can also remove things and so this is it's really really is flexible it can
31:48
it's really really flexible just because anything you want to pull out um you can pull out can apply to any document right
31:54
so even if you were to pass in like 30 different formats of receipts it doesn't matter it's still going to be able to
32:00
find the specific invoice number of that receipt right so no matter what like
32:07
this document might have an invoice number up here another one might have an invoice number down here or whatever and
32:12
there might be 30 variants of where the invoice number is but this data is still always going to pull it out every single
32:18
time there might be occasional mistakes of course but most the time it should be good and so we have our structured data
32:24
here and I'm just going to flip this over to expression and open this up so you guys can kind of see it but this is more or less the output that we want it
32:32
to have where we're going to structure it with um pulling out things like invoice number invoice date due date
32:38
billing info name company address city state blah blah blah blah blah all this kind of stuff line items every single
32:44
one of them it's going to pull it all out it's going to put in the correct information found on the receipt that
32:49
we're or invoice that we're actually using and so obviously super powerful stuff i'm going to close this the only
32:55
other thing we need to do is just make sure to output the content as JSON data here what this is meaning is that um
33:02
like we don't we want to output it as JSON data so if we actually look at this
33:08
this is JSON data you can see the colors and everything like this but you can also have JSON data as text and this is
33:14
literally just JSON data as text like we just threw it into a text box here we don't want it in a text box we want it
33:20
as actual JSON data here because this is like the backbone of um of NAD like you
33:27
can just you can also kind of see this is JSON data here but JSON data like you could easily have this as just in like a
33:33
text field here and it would be text with the kind of formatting of JSON but
33:38
it would be confined within a text so we just want to make sure that when we output the content here it's actually
33:44
coming back as JSON with like square braces like this and like that and all that kind of stuff and so we can go
33:49
ahead and we can test this out and um we should get the ideal format that we're looking for it's not going to find
33:56
everything right because not every single agreement is going to have this kind of stuff but we have like um
34:01
invoice number here invoice date due date billing info line items um all of
34:06
this kind of stuff so that looks good next thing we're going to do is something called a split out this is um
34:13
it's not something you absolutely need but it's something that I would definitely recommend going through and
34:21
so with this being said um we are going to pass in here the let me just see
34:29
here going to switch over to
34:34
schema we're going to do the line items here so let me explain what's going on
34:40
let's take this receipt for example we have four line items 1 2 3 4 and so on
34:46
and so forth maybe you want and this is just up to taste but I want to throw this in here just to give extra options
34:53
maybe you want a different row for every single line item so what I'm doing here
34:58
is I'm using a split out which is going to go through each line item one by one by one by one so we're going to start
35:05
here line item one and we're going to go through this and that's going to be like the 14 JR DSR whatever then we're going
35:13
to go to line item two and we're going to go through that and we're going to add to this spreadsheet then we're going to go to line item three and then add
35:20
that in here and then finally line item four and add that in here very similarly to how we kind of and that was probably
35:26
the worst drawing I've ever done in my entire life but very similarly to how we have it structured here where we're
35:32
going through each one individually so let's go ahead and set this up we have pulled in the line items over here and
35:39
added them right in here and this is now going to go through them one by one by one and we can add them into the Google
35:45
Sheets module here we're going to choose append which is a fancy way of saying row this will be in the blueprints for
35:52
free down below in the description and so we're going to take this and uh we're going to take that data and enter it
35:58
into this spreadsheet here so first things first we'll connect in the account this should be pretty simple by
36:03
just essentially signing into your account if you're on the cloud version of NADN up here if not it'll be a bit
36:11
more complicated then the second thing we want to do is actually find that spreadsheet which is NAD OCR extraction
36:19
and we're going to select the right sheet the right sheet is down here i think about this more like a tab than anything else and then we're going to
36:25
add in the data one by one by one we don't have any sample data on the side here so what I'm going to do is I'm
36:31
going to test this workflow just so that we can have some live data to actually work with here and then we'll be able to
36:38
add this in here it threw an error no problem that just means that we actually need to add values in here and there's
36:44
nothing that we've added down here no problem whatsoever and so we're going to go ahead and do this the first thing I
36:50
want to do is add in the line items here and so um we're going to choose like
36:56
price name all this kind of stuff if there was like 10 different line items
37:01
they would all have their own names and price and these would change depending on that and uh yeah so that looks good
37:07
to me we can add in quantity here we can add in um invoice number where is that
37:15
invoice number total on the invoice would be subtotal down here or maybe total due
37:22
and then date let's just see the actual date
37:28
sweet and then line item i guess this is kind of like the same thing i'm just
37:34
going to do description here and actually change this to be
37:40
the something else hm what do I want it to be maybe I'll just put like the name
37:47
on the the billing uh the the name of the company that build us okay we'll
37:52
test this out and in this instance it's going to add one more line to column seven here so
38:00
there we go and if there is like you know again if there was like 30
38:05
different things here it would add 30 different line items to this document so that's more or less how we can get how
38:12
we can how we can work with PDF documents the next thing we're going to do is work with um images so I've gone
38:18
ahead and hold held down shift and then just moved over everything and hit copy here as you can see on the right hand
38:24
side there and we're going to create a new workflow and this time we're going to be processing images and so I'll
Subagent for processing images
38:31
paste this in by hitting commandV and I'm going to call this image processing
38:38
and very similarly to be to before we're going to do the same thing but this time we're working with images like this
38:44
receipt right here and so let's go ahead and do this um we're going to keep most
38:50
things the same which is why we copied it in such as that message and the ID here all we need to do is go back to the
38:57
original workflow and we're going to add in another tool and this tool is going
39:03
to be tool right here is going to be that secondary tool that we just created
39:08
and this is going to be image processing we're going to title it that and I'll call this image tool
39:18
and the description again is how the AI agent knows when to use this i'm going to say call this tool when you're um
39:26
processing images via OCR and we're going to choose that
39:32
workflow based on its name here so image processing and unfortunately I have two
39:39
workflows identically with the name same name so I'm going to just call this image processing 2 close out of this and
39:47
open it back up just so that it refreshes again and it pulls in that correct one so image processing and then
39:53
we can just add in the message and the ID here so the
39:58
chat the file ID here is going to be down here and the message will be the
40:03
caption once again okay perfect so this looks good to me the only thing is is we
40:09
have a pinned message here which means that we're always using the same freaking message every single time so what I want to do is I want to unpin
40:16
this because I want to actually get an image or a message of an image so we're going to test this out and this time
40:23
we're going to attach another file here and this time it's going to be that
40:28
particular image here so I'm going to say please process this image okay and
40:36
it's uploaded and now it's going over to the image processing section here and it's failing which is totally fine and
40:43
I'm just going to pin this first post it's failing because we haven't set this up properly yet and um yeah just keep in
40:50
mind too when we're putting in information like the message and the ID here um you need to get it right on the
40:56
first message because um if you try and do follow-up messages without processing
41:02
the first time it's not going to work and you can structure this however you want i'm just giving you kind of the bare bones and you can take take it and
41:08
and build whatever you want with it but essentially we're just pulling the information directly from this message
41:13
so if you were to put a second message here from Telegram it's not that second message isn't going to include the file
41:19
ID or whatever so um yeah just keep that in mind so now with this we're going to
41:27
make a couple modifications here i'm going to unlink this and firstly we're
41:32
going to go over to this first section here and I just want to grab the right ID of that image because right now we
41:38
have the saved PDF file because we copied this from the PDF path so I'm going to open up the main uh Telegram
41:44
trigger here and we're going to copy this file ID section here and we're going to paste it
41:53
in here and now this is the ID of that image and I'm going to say process this
42:00
image um it process this image just like that nothing more okay cool we can test this
42:07
out and let's take a look and see did we actually download the correct image
42:15
here and we can see that we downloaded it so we're all good on that end next
42:20
what I want to do is I want to actually convert this from or I want to convert
42:27
this to text and so initially what I'd like to do is open up a open AI and I
42:34
want to analyze an image and in this I'm just going to say please um pull out all
42:40
the text from the image and we can choose the input type
42:45
as binary this is currently a binary file it's not a URL so we can choose this and by default it's going to grab
42:52
data we can see data up top here so it's going to pull in the right information and again the model that we're choosing
42:59
um I mean yeah I'm just going to choose OpenAI 40 of course after I change the
43:06
OpenAI credentials up top here and yeah so that looks good to me or we can just
43:12
choose the the latest model here and we can go ahead and test it and it's not going to work
43:19
and the reason it's not going to work is because it has this mime or meme or
43:24
whatever type that's wrong it's expecting a p uh image but we can see
43:30
over here that it's this octet stream and I think this is just an issue with
43:36
like Telegram um where they don't actually like give you back the JPEG
43:43
file that's like in some other MIME type and it just doesn't play nicely for whatever reason with OpenAI here and so
43:50
what I found the workound to be here is I added in another um another node in
43:57
between this and I just typed in image and I chose edit image and what I
44:03
selected from here was I think it was a composite image and so essentially I'm
44:10
just putting in data in data here and what's going to happen is it's going to take this and it's going to add in
44:18
another image on top of this and let's
44:23
just see where do I want to include
44:28
this yeah I think just over is fine but we're essentially overlaying an image on
44:33
top of this I think is what's going on here and it's just like a transparent image over top of it so it's just
44:40
essentially recaring a new image with a transparent layer or something like that which means it's still the same image
44:46
nothing's really changed it's just changing the file type so that now it's something that we can actually work with
44:52
so let's go ahead and test this out and we've gone ahead we've edited the image
44:58
as like the most weird backwards way of doing things but it works and now we can
45:04
see that we've pulled out the text here because um now we've got it into the right file type so for whatever reason
45:10
Telegram's like octet stream file or mime type can meme or mime or whatever
45:16
it is um it works with the edit image modu node but it doesn't work with the
45:21
openi node i don't know why just it is the way it is and we're going to connect this back in here and this the only
45:29
thing we need to do is just essentially actually pull in this data from here so
45:35
we need to grab the right content because since we copied this from our PDF document here it's pulling in the
45:41
information from the extract from a file module but we want to pull this in from the uh the open analyze image this is
45:48
literally just analyzing this image okay so it's going through and it's like pulling out this text
45:55
um from that image right in a in a JPEG format which is super cool works the
46:01
same way as a PDF document I guess and so we're able to grab that information from that image turn it into text we can
46:10
kind of see here's the text from the receipt and it pulls in Marshalls and
46:15
Carson Valley Plaza 911 Topsy Lane all that kind of
46:20
stuff so let's go back and let's see Carson Valley Plaza um 911 Topsy Lane
46:27
okay perfect so it's pulling everything out and then we connected in the data
46:33
from this analyze in analyze image to the chat GBT module so now we're plugging in the information in that user
46:40
message and we can go ahead and test this out and now it's just going to go through line item by line item keep in
46:47
mind there should be four line items here right and it's going to add this in
46:54
to our spreadsheet here so we just got it and yeah let's take a look marshalls
47:00
1999$ 1999 $24.99 $24 and we can cross reference that from
47:06
this actual receipt here and let's take a look so $19.99 okay perfect and this
47:14
all looks good and then it's grabbing in the
47:19
$9529 and that's the AAX total down here or total down here and so that's
47:25
essentially it right in a nutshell we built a AI agent that's capable of
47:30
handling um images and PDF documents we have a tool for PDF processing a tool to
47:36
tool for image processing and then these tools will go ahead strip the text from
47:42
these documents we'll turn it from an unstructured um from unstructured text into
47:47
structured JSON data and then we're going to send that over to our Google sheet here now this is just one use case
47:55
for this but we could do this with multiple different file types if there's a different file type that you want to
48:01
grab data from I'm sure you could add another tool in here and have something
48:07
for other file types as well and you don't just have to um send it to Google
48:13
Sheets but you could probably upload this into QuickBooks online as well or
48:18
your accounting software or you could um do whatever it is you want with this
48:23
right you could even send this as an email like a Gmail to your accountant or you could do a million one things this
48:30
is just a really easy and practical way of doing this so thanks guys so much for watching this video i hope you found
Conclusion
48:36
value in it once again the blueprints are going to be down below for free if you guys do end up wanting to download
48:42
that and if you guys are um looking for additional resources or additional help
48:48
with your journey along AI automation I highly recommend you taking a look at my school community over here we have
48:55
314 members um started like just over I think a month ago or something like that
49:00
and there's just tons of resources here for um naden goh highlevel make.com all
49:06
of my blueprints in here weekly group calls 5 days a week and then on top of
49:13
that you know there's just a classroom section that you can get um tons of additional information on these tools
49:19
and and be set up for success so if that sounds like something that you're interested in then I highly recommend
49:25
taking a look at that once again really appreciate your time if you have any comments leave them down below in the description or in the comment section if
49:32
you guys liked this video and you want to see other videos just like this one then please hit that subscribe button
49:37
because I'm going to be releasing content like this literally all the freaking time thank you guys once again have a wonderful day i'll see you soon
49:44
bye-bye