/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    tenants: Tenant;
    users: User;
    workflows: Workflow;
    tenantMemberships: TenantMembership;
    spaceMemberships: SpaceMembership;
    appointments: Appointment;
    contacts: Contact;
    messages: Message;
    spaces: Space;
    webChatSessions: WebChatSession;
    channelManagement: ChannelManagement;
    socialMediaBots: SocialMediaBot;
    'linked-accounts': LinkedAccount;
    invoices: Invoice;
    documents: Document;
    donations: Donation;
    products: Product;
    orders: Order;
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    organizations: Organization;
    venues: Venue;
    'business-agents': BusinessAgent;
    'humanitarian-agents': HumanitarianAgent;
    aiGenerationQueue: AiGenerationQueue;
    'job-queue': JobQueue;
    channels: Channel;
    phyles: Phyle;
    'agent-reputation': AgentReputation;
    'inventory-messages': InventoryMessage;
    'photo-analysis': PhotoAnalysis;
    'mileage-logs': MileageLog;
    'quote-requests': QuoteRequest;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    workflows: WorkflowsSelect<false> | WorkflowsSelect<true>;
    tenantMemberships: TenantMembershipsSelect<false> | TenantMembershipsSelect<true>;
    spaceMemberships: SpaceMembershipsSelect<false> | SpaceMembershipsSelect<true>;
    appointments: AppointmentsSelect<false> | AppointmentsSelect<true>;
    contacts: ContactsSelect<false> | ContactsSelect<true>;
    messages: MessagesSelect<false> | MessagesSelect<true>;
    spaces: SpacesSelect<false> | SpacesSelect<true>;
    webChatSessions: WebChatSessionsSelect<false> | WebChatSessionsSelect<true>;
    channelManagement: ChannelManagementSelect<false> | ChannelManagementSelect<true>;
    socialMediaBots: SocialMediaBotsSelect<false> | SocialMediaBotsSelect<true>;
    'linked-accounts': LinkedAccountsSelect<false> | LinkedAccountsSelect<true>;
    invoices: InvoicesSelect<false> | InvoicesSelect<true>;
    documents: DocumentsSelect<false> | DocumentsSelect<true>;
    donations: DonationsSelect<false> | DonationsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    organizations: OrganizationsSelect<false> | OrganizationsSelect<true>;
    venues: VenuesSelect<false> | VenuesSelect<true>;
    'business-agents': BusinessAgentsSelect<false> | BusinessAgentsSelect<true>;
    'humanitarian-agents': HumanitarianAgentsSelect<false> | HumanitarianAgentsSelect<true>;
    aiGenerationQueue: AiGenerationQueueSelect<false> | AiGenerationQueueSelect<true>;
    'job-queue': JobQueueSelect<false> | JobQueueSelect<true>;
    channels: ChannelsSelect<false> | ChannelsSelect<true>;
    phyles: PhylesSelect<false> | PhylesSelect<true>;
    'agent-reputation': AgentReputationSelect<false> | AgentReputationSelect<true>;
    'inventory-messages': InventoryMessagesSelect<false> | InventoryMessagesSelect<true>;
    'photo-analysis': PhotoAnalysisSelect<false> | PhotoAnalysisSelect<true>;
    'mileage-logs': MileageLogsSelect<false> | MileageLogsSelect<true>;
    'quote-requests': QuoteRequestsSelect<false> | QuoteRequestsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * Multi-tenant organizations and their configurations
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: number;
  /**
   * The display name for this tenant (e.g., "Hays Cactus Farm")
   */
  name: string;
  /**
   * URL-friendly identifier (e.g., "hays-cactus-farm")
   */
  slug: string;
  /**
   * Custom domain (optional) - e.g., "hayscactus.com"
   */
  domain?: string | null;
  /**
   * Subdomain for multi-tenancy - e.g., "hays" for hays.kendev.co
   */
  subdomain?: string | null;
  businessType: 'dumpster-rental' | 'bedbug-treatment' | 'salon' | 'cactus-farm' | 'retail' | 'service' | 'other';
  revenueSharing?: {
    /**
     * One-time setup fee charged for onboarding
     */
    setupFee?: number | null;
    /**
     * Percentage of sales revenue shared with Spaces Commerce
     */
    revenueShareRate?: number | null;
    /**
     * Partnership level affecting rates and terms
     */
    partnershipTier?: ('standard' | 'preferred' | 'strategic' | 'enterprise' | 'referral_source') | null;
    /**
     * Custom partnership terms and agreements
     */
    negotiatedTerms?: string | null;
    /**
     * Minimum monthly revenue for rate adjustments
     */
    minimumMonthlyRevenue?: number | null;
    volumeDiscounts?:
      | {
          threshold: number;
          discountRate: number;
          id?: string | null;
        }[]
      | null;
  };
  referralProgram?: {
    /**
     * Solution provider or partner who referred this tenant
     */
    referredBy?: (number | null) | User;
    /**
     * Unique code used for this referral
     */
    referralCode?: string | null;
    /**
     * Percentage of revenue share paid to referrer
     */
    referralCommissionRate?: number | null;
    referralTerms?: ('lifetime' | '12_months' | '24_months' | 'first_year') | null;
    referralStatus?: ('active' | 'expired' | 'suspended') | null;
  };
  /**
   * Automated revenue tracking and commission calculations
   */
  revenueTracking?: {
    /**
     * Auto-calculated from orders
     */
    monthlyRevenue?: number | null;
    /**
     * Total revenue generated since launch
     */
    totalRevenue?: number | null;
    lastRevenueCalculation?: string | null;
    commissionsPaid?: number | null;
    /**
     * Current rate after volume discounts
     */
    currentEffectiveRate?: number | null;
  };
  status: 'active' | 'setup' | 'suspended' | 'archived';
  configuration?: {
    /**
     * Primary brand color (hex code)
     */
    primaryColor?: string | null;
    /**
     * Tenant logo for branding
     */
    logo?: (number | null) | Media;
    /**
     * Custom favicon
     */
    favicon?: (number | null) | Media;
    /**
     * Primary contact email for this tenant
     */
    contactEmail?: string | null;
    /**
     * Primary contact phone number
     */
    contactPhone?: string | null;
    address?: {
      street?: string | null;
      city?: string | null;
      state?: string | null;
      zipCode?: string | null;
      country?: string | null;
    };
  };
  features?: {
    /**
     * Enable e-commerce functionality
     */
    ecommerce?: boolean | null;
    /**
     * Enable Spaces communication platform
     */
    spaces?: boolean | null;
    /**
     * Enable CRM functionality
     */
    crm?: boolean | null;
    /**
     * Enable VAPI voice integration
     */
    vapi?: boolean | null;
    /**
     * Enable N8N workflow automation
     */
    n8n?: boolean | null;
    /**
     * Enable member engagement portal
     */
    memberPortal?: boolean | null;
  };
  limits?: {
    /**
     * Maximum number of users for this tenant
     */
    maxUsers?: number | null;
    /**
     * Maximum number of products
     */
    maxProducts?: number | null;
    /**
     * Maximum storage in MB
     */
    maxStorage?: number | null;
  };
  /**
   * Consolidated configuration data for this tenant (memberships, revenue settings, integrations, business settings, limits, etc.). This field is managed programmatically by migration scripts.
   */
  jsonData?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Tracks the status of JSON data migration for this tenant.
   */
  _migrationStatus?: {
    jsonMigrated?: boolean | null;
    migratedAt?: string | null;
    migrationVersion?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  profileImage?: (number | null) | Media;
  tenant: number | Tenant;
  roles?: ('admin' | 'editor' | 'contributor' | 'subscriber' | 'guardian_angel')[] | null;
  karma?: {
    score?: number | null;
    contributionTypes?:
      | (
          | 'content_creation'
          | 'community_support'
          | 'technical_contribution'
          | 'mentorship'
          | 'justice_advocacy'
          | 'guardian_angel'
        )[]
      | null;
    recognitions?:
      | {
          type:
            | 'helpful_response'
            | 'quality_content'
            | 'community_leadership'
            | 'technical_excellence'
            | 'guardian_angel_action';
          points: number;
          reason?: string | null;
          awardedBy?: (number | null) | User;
          awardedAt?: string | null;
          id?: string | null;
        }[]
      | null;
    /**
     * User has achieved Guardian Angel status through karma contributions
     */
    guardianAngelStatus?: boolean | null;
  };
  tenantMemberships?:
    | {
        tenant: number | Tenant;
        role: 'owner' | 'admin' | 'editor' | 'contributor' | 'viewer';
        joinedAt?: string | null;
        permissions?:
          | (
              | 'manage_content'
              | 'manage_products'
              | 'manage_forms'
              | 'view_analytics'
              | 'manage_users'
              | 'manage_settings'
            )[]
          | null;
        id?: string | null;
      }[]
    | null;
  preferences?: {
    notifications?: {
      email?: boolean | null;
      inApp?: boolean | null;
      /**
       * Receive alerts when Guardian Angel assistance is needed
       */
      guardianAngelAlerts?: boolean | null;
    };
    privacy?: {
      profileVisibility?: ('public' | 'members' | 'private') | null;
      karmaScoreVisible?: boolean | null;
    };
  };
  lastLoginAt?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * Images, files, and media assets with optimized delivery
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "workflows".
 */
export interface Workflow {
  id: number;
  /**
   * Human-readable name for this workflow
   */
  name: string;
  /**
   * Detailed description of what this workflow does
   */
  description?: string | null;
  tenant: number | Tenant;
  status: 'active' | 'paused' | 'draft' | 'archived';
  trigger: {
    /**
     * Which collection triggers this workflow
     */
    collection: 'posts' | 'pages' | 'products' | 'messages' | 'forms' | 'users' | 'orders';
    /**
     * What event triggers this workflow
     */
    event: 'created' | 'updated' | 'deleted' | 'published' | 'status_changed' | 'custom';
    /**
     * JSON conditions that must be met for workflow to trigger
     */
    conditions?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    /**
     * Name of custom event to listen for
     */
    customEventName?: string | null;
  };
  steps: {
    /**
     * Human-readable name for this step
     */
    name: string;
    type:
      | 'create_record'
      | 'update_record'
      | 'send_email'
      | 'send_sms'
      | 'api_call'
      | 'ai_analysis'
      | 'conditional'
      | 'delay'
      | 'custom_function';
    /**
     * Configuration specific to this step type
     */
    config:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    /**
     * Which collection this step operates on
     */
    targetCollection?: ('posts' | 'pages' | 'products' | 'messages' | 'forms' | 'users' | 'orders') | null;
    automation: 'automated' | 'human_review' | 'ai_assisted' | 'manual';
    /**
     * Use AI to help with this step
     */
    aiAssisted?: boolean | null;
    retryConfig?: {
      maxRetries?: number | null;
      /**
       * Delay between retries in seconds
       */
      retryDelay?: number | null;
    };
    /**
     * Order of execution (1, 2, 3, etc.)
     */
    order: number;
    id?: string | null;
  }[];
  businessContext: {
    /**
     * Which department this workflow serves
     */
    department?: ('sales' | 'marketing' | 'operations' | 'support' | 'finance' | 'hr') | null;
    /**
     * What business process this workflow supports
     */
    process?:
      | (
          | 'lead_generation'
          | 'customer_onboarding'
          | 'order_processing'
          | 'content_publishing'
          | 'customer_support'
          | 'project_management'
          | 'quality_assurance'
          | 'compliance'
        )
      | null;
    priority: 'low' | 'normal' | 'high' | 'critical';
  };
  ethicalFramework?: {
    /**
     * Require human approval before executing this workflow
     */
    humanApprovalRequired?: boolean | null;
    /**
     * Bias detection checkpoints for AI-assisted steps
     */
    biasCheckpoints?:
      | {
          /**
           * Description of bias check to perform
           */
          checkpoint: string;
          /**
           * Which step to check for bias
           */
          stepNumber: number;
          id?: string | null;
        }[]
      | null;
    /**
     * Angel OS values this workflow aligns with
     */
    valueAlignment?:
      | (
          | 'guardian_angel'
          | 'justice_advocacy'
          | 'economic_empowerment'
          | 'community_building'
          | 'transparency'
          | 'privacy_protection'
        )[]
      | null;
    /**
     * Can trigger Guardian Angel assistance if needed
     */
    guardianAngelTrigger?: boolean | null;
  };
  performance?: {
    /**
     * Total number of times this workflow has executed
     */
    executionCount?: number | null;
    /**
     * Number of successful executions
     */
    successCount?: number | null;
    /**
     * Number of failed executions
     */
    failureCount?: number | null;
    /**
     * Average execution time in seconds
     */
    averageExecutionTime?: number | null;
    /**
     * When this workflow last executed
     */
    lastExecutedAt?: string | null;
  };
  notifications?: {
    /**
     * Send notification when workflow completes successfully
     */
    notifyOnSuccess?: boolean | null;
    /**
     * Send notification when workflow fails
     */
    notifyOnFailure?: boolean | null;
    /**
     * Users to notify about workflow status
     */
    notificationRecipients?: (number | User)[] | null;
    /**
     * Slack webhook URL for notifications
     */
    slackWebhook?: string | null;
  };
  scheduling?: {
    /**
     * Run this workflow on a schedule instead of event-based
     */
    isScheduled?: boolean | null;
    /**
     * Cron expression for scheduled execution
     */
    cronExpression?: string | null;
    timezone?: ('UTC' | 'America/New_York' | 'America/Chicago' | 'America/Denver' | 'America/Los_Angeles') | null;
  };
  /**
   * Version number of this workflow
   */
  version?: number | null;
  /**
   * History of changes to this workflow
   */
  changeLog?:
    | {
        version: number;
        changes: string;
        changedBy: number | User;
        changedAt: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * User memberships and roles within specific tenants
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenantMemberships".
 */
export interface TenantMembership {
  id: number;
  /**
   * The user this membership belongs to
   */
  user: number | User;
  /**
   * The tenant this membership provides access to
   */
  tenant: number | Tenant;
  /**
   * Role within this specific tenant
   */
  role: 'tenant_admin' | 'tenant_manager' | 'tenant_member';
  /**
   * Custom permissions for this membership
   */
  permissions?:
    | (
        | 'manage_users'
        | 'manage_spaces'
        | 'manage_content'
        | 'manage_products'
        | 'manage_orders'
        | 'view_analytics'
        | 'manage_settings'
        | 'manage_billing'
        | 'export_data'
      )[]
    | null;
  /**
   * When the user joined this tenant
   */
  joinedAt: string;
  /**
   * Who invited this user to the tenant
   */
  invitedBy?: (number | null) | User;
  /**
   * Current status of this membership
   */
  status: 'active' | 'pending' | 'suspended' | 'revoked';
  tenantProfile?: {
    /**
     * Display name within this tenant (optional override)
     */
    displayName?: string | null;
    /**
     * Bio specific to this tenant context
     */
    tenantBio?: string | null;
    /**
     * Department or team within the tenant
     */
    department?: string | null;
    /**
     * Position or role title within the tenant
     */
    position?: string | null;
  };
  invitationDetails?: {
    /**
     * Unique token for invitation acceptance
     */
    invitationToken?: string | null;
    /**
     * When the invitation expires
     */
    invitationExpiresAt?: string | null;
    /**
     * Custom message included with the invitation
     */
    invitationMessage?: string | null;
  };
  /**
   * Last activity within this tenant
   */
  lastActiveAt?: string | null;
  /**
   * Automatically tracked activity within this tenant
   */
  activityMetrics?: {
    /**
     * Number of logins to this tenant
     */
    loginCount?: number | null;
    /**
     * Number of spaces joined within this tenant
     */
    spacesJoined?: number | null;
    /**
     * Amount of content created within this tenant
     */
    contentCreated?: number | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * User participation and engagement within specific spaces
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "spaceMemberships".
 */
export interface SpaceMembership {
  id: number;
  /**
   * The user this membership belongs to
   */
  user: number | User;
  /**
   * The space this membership provides access to
   */
  space: number | Space;
  /**
   * Related tenant membership (user must be a tenant member)
   */
  tenantMembership?: (number | null) | TenantMembership;
  /**
   * Role within this specific space
   */
  role: 'space_admin' | 'moderator' | 'member' | 'guest';
  /**
   * Custom permissions for this space membership
   */
  customPermissions?:
    | (
        | 'post_messages'
        | 'upload_files'
        | 'create_events'
        | 'moderate_content'
        | 'manage_members'
        | 'view_analytics'
        | 'manage_bookings'
        | 'access_private'
      )[]
    | null;
  /**
   * Current status of this space membership
   */
  status: 'active' | 'pending' | 'suspended' | 'left' | 'banned';
  /**
   * When the user joined this space
   */
  joinedAt: string;
  crmData?: {
    /**
     * Lead scoring for sales qualification (0-100)
     */
    leadScore?: number | null;
    /**
     * Customer classification level
     */
    customerTier?: ('prospect' | 'lead' | 'customer' | 'vip') | null;
    /**
     * CRM tags for categorization
     */
    tags?: string[] | null;
    /**
     * CRM notes about this member
     */
    notes?: string | null;
    /**
     * Last meaningful interaction date
     */
    lastInteraction?: string | null;
    /**
     * Track conversion events and their values
     */
    conversionEvents?:
      | {
          /**
           * Type of conversion event
           */
          event: string;
          /**
           * When the event occurred
           */
          timestamp: string;
          /**
           * Monetary value of the event (optional)
           */
          value?: number | null;
          id?: string | null;
        }[]
      | null;
  };
  /**
   * Automatically tracked engagement data
   */
  engagementMetrics?: {
    /**
     * Total messages posted in this space
     */
    messagesCount?: number | null;
    /**
     * Last activity in this space
     */
    lastActive?: string | null;
    /**
     * Total time spent in space (minutes)
     */
    totalTimeSpent?: number | null;
    /**
     * Amount of content created
     */
    contentCreated?: number | null;
    /**
     * Number of events attended
     */
    eventsAttended?: number | null;
    /**
     * Calculated engagement score (0-100)
     */
    engagementScore?: number | null;
  };
  notificationSettings?: {
    /**
     * Notify when mentioned in this space
     */
    mentions?: boolean | null;
    /**
     * Allow direct messages from space members
     */
    directMessages?: boolean | null;
    /**
     * Receive space announcements
     */
    announcements?: boolean | null;
    /**
     * Notify about space events
     */
    events?: boolean | null;
  };
  spaceProfile?: {
    /**
     * Display name within this space (optional override)
     */
    displayName?: string | null;
    /**
     * Bio specific to this space context
     */
    spaceBio?: string | null;
    /**
     * Interests relevant to this space
     */
    interests?: string[] | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Business spaces for collaboration, content, and customer engagement
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "spaces".
 */
export interface Space {
  id: number;
  /**
   * Federated identity for cross-platform business operations
   */
  atProtocol?: {
    /**
     * Decentralized Identifier for federation
     */
    did?: string | null;
    /**
     * Federated handle for cross-platform discovery
     */
    handle?: string | null;
  };
  /**
   * Tenant this space belongs to
   */
  tenant: number | Tenant;
  /**
   * Display name for this space
   */
  name: string;
  /**
   * URL-friendly identifier for this space
   */
  slug: string;
  /**
   * Description of what this space is for
   */
  description?: string | null;
  businessIdentity: {
    /**
     * Primary business model - determines available features
     */
    type: 'business' | 'creator' | 'service' | 'retail' | 'manufacturing';
    /**
     * Industry category for tailored features and integrations
     */
    industry:
      | 'general'
      | 'content-creation'
      | 'automotive'
      | 'agriculture'
      | 'food-beverage'
      | 'professional-services'
      | 'retail'
      | 'technology'
      | 'healthcare'
      | 'education';
    /**
     * Business size affects available features and limits
     */
    companySize?: ('solo' | 'small' | 'medium' | 'large') | null;
    /**
     * Market scope for localization and payment options
     */
    targetMarket?: ('local' | 'national' | 'international' | 'online') | null;
  };
  commerceSettings?: {
    /**
     * Enable product catalog and online ordering
     */
    enableEcommerce?: boolean | null;
    /**
     * Enable service booking and appointment scheduling
     */
    enableServices?: boolean | null;
    /**
     * Enable AI-generated merchandise (for content creators)
     */
    enableMerchandise?: boolean | null;
    /**
     * Enable subscription and recurring services
     */
    enableSubscriptions?: boolean | null;
    /**
     * Accepted payment methods
     */
    paymentMethods?: ('credit_cards' | 'paypal' | 'bank_transfer' | 'cod' | 'crypto')[] | null;
    /**
     * Available shipping and delivery options
     */
    shippingZones?: ('local' | 'domestic' | 'international' | 'pickup')[] | null;
  };
  /**
   * OnlyFans-style creator monetization features
   */
  monetization?: {
    /**
     * Enable creator monetization features
     */
    enabled?: boolean | null;
    /**
     * Create subscription tiers for premium content access
     */
    subscriptionTiers?:
      | {
          /**
           * Tier name (e.g., "VIP", "Premium", "Basic")
           */
          name: string;
          /**
           * What subscribers get with this tier
           */
          description?: string | null;
          /**
           * Monthly subscription price
           */
          price: number;
          currency?: ('usd' | 'eur' | 'gbp') | null;
          /**
           * List of features included in this tier
           */
          features?: string[] | null;
          /**
           * Types of content this tier unlocks
           */
          contentAccess?:
            | (
                | 'premium_posts'
                | 'exclusive_videos'
                | 'private_messages'
                | 'live_streams'
                | 'custom_content'
                | 'early_access'
              )[]
            | null;
          /**
           * Stripe Price ID for payment processing
           */
          stripePriceId?: string | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Enable tips/donations from fans
     */
    donationsEnabled?: boolean | null;
    /**
     * Pay-per-view content and custom requests
     */
    customPricing?: {
      /**
       * Enable pay-per-view content
       */
      enabled?: boolean | null;
      /**
       * Default price for custom content requests
       */
      defaultPrice?: number | null;
      /**
       * Minimum tip amount
       */
      minimumTip?: number | null;
    };
    /**
     * Stripe Connect Account ID for direct payments
     */
    merchantAccount?: string | null;
    /**
     * Revenue sharing agreement type
     */
    revenueAgreementType?: ('standard' | 'negotiated' | 'performance' | 'volume' | 'ai-optimized') | null;
    /**
     * Platform fee percentage (8-30%) - Includes marketing, infrastructure, and business automation
     */
    revenuePlatformFee?: number | null;
    /**
     * Legal contract reference ID
     */
    revenueContractId?: string | null;
    /**
     * When negotiated rates take effect
     */
    revenueEffectiveDate?: string | null;
    /**
     * Next rate review date
     */
    revenueReviewDate?: string | null;
    /**
     * Enable AI rate optimization
     */
    aiOptEnabled?: boolean | null;
    /**
     * AI algorithm version identifier
     */
    aiOptVersion?: string | null;
    /**
     * Factors for AI optimization
     */
    aiOptFactors?: ('velocity' | 'engagement' | 'quality' | 'platform-value' | 'market' | 'competitive')[] | null;
    /**
     * Minimum fee percentage (AI floor)
     */
    aiOptFeeMin?: number | null;
    /**
     * Maximum fee percentage (AI ceiling)
     */
    aiOptFeeMax?: number | null;
    /**
     * AI-encoded optimization parameters (system use only)
     */
    aiOptParams?: string | null;
    /**
     * Payment processing fee percentage (Stripe)
     */
    revenueProcessingFee?: number | null;
    /**
     * Current effective platform fee (auto-calculated)
     */
    revenueCalculatedFee?: number | null;
  };
  integrations?: {
    youtube?: {
      /**
       * YouTube Channel ID for content analysis
       */
      channelId?: string | null;
      /**
       * YouTube API key for automated content sync
       */
      apiKey?: string | null;
      /**
       * Automatically sync channel content for merchandise generation
       */
      autoSync?: boolean | null;
    };
    printPartners?:
      | {
          /**
           * Print partner name (e.g., "Largo T-Shirt Company")
           */
          name: string;
          /**
           * API endpoint for automated ordering
           */
          apiEndpoint?: string | null;
          /**
           * Available product types from this partner
           */
          productCatalog?: ('tshirts' | 'mugs' | 'stickers' | 'posters' | 'hoodies')[] | null;
          id?: string | null;
        }[]
      | null;
    scheduling?: {
      /**
       * Enable appointment booking and resource scheduling
       */
      enabled?: boolean | null;
      /**
       * Number of service bays/resources (e.g., 2 for car stereo shop)
       */
      resourceCount?: number | null;
      /**
       * Default appointment duration
       */
      timeSlots?: ('30' | '60' | '120' | '240') | null;
    };
    socialBots?: {
      /**
       * All revenue-generating platforms for automated content distribution. Posts create instant multi-platform presence.
       */
      platforms?:
        | (
            | 'facebook'
            | 'instagram'
            | 'twitter'
            | 'bluesky'
            | 'threads'
            | 'linkedin'
            | 'angellist'
            | 'crunchbase'
            | 'youtube'
            | 'tiktok'
            | 'snapchat'
            | 'pinterest'
            | 'patreon'
            | 'onlyfans'
            | 'substack'
            | 'whatsapp'
            | 'telegram'
            | 'discord'
            | 'slack'
            | 'mastodon'
            | 'bereal'
            | 'clubhouse'
            | 'twitch'
            | 'wechat'
            | 'line'
            | 'weibo'
            | 'vkontakte'
            | 'shopify_social'
            | 'etsy'
            | 'amazon_seller'
            | 'ebay'
            | 'medium'
            | 'dev_to'
            | 'hashnode'
            | 'reddit'
            | 'quora'
            | 'vimeo'
            | 'rumble'
            | 'odysee'
            | 'perplexity'
            | 'character_ai'
            | 'poe'
          )[]
        | null;
      /**
       * Automatically post business updates and content
       */
      autoPost?: boolean | null;
    };
  };
  theme?: {
    /**
     * Space logo
     */
    logo?: (number | null) | Media;
    /**
     * Space banner image
     */
    banner?: (number | null) | Media;
    /**
     * Primary brand color (hex)
     */
    primaryColor?: string | null;
    /**
     * Secondary brand color (hex)
     */
    secondaryColor?: string | null;
    /**
     * Custom CSS for advanced styling
     */
    customCSS?: string | null;
  };
  /**
   * Who can discover and join this space
   */
  visibility: 'public' | 'invite_only' | 'private';
  /**
   * How new members are approved
   */
  memberApproval: 'automatic' | 'manual' | 'disabled';
  inviteSettings?: {
    /**
     * Allow members to invite others
     */
    membersCanInvite?: boolean | null;
    /**
     * Require invite code to join
     */
    requireInviteCode?: boolean | null;
    /**
     * Invite code for joining (auto-generated if empty)
     */
    inviteCode?: string | null;
  };
  /**
   * Automatically calculated statistics
   */
  stats?: {
    /**
     * Number of members in this space
     */
    memberCount?: number | null;
    /**
     * Total messages in this space
     */
    messageCount?: number | null;
    /**
     * Last message or activity timestamp
     */
    lastActivity?: string | null;
    /**
     * Overall engagement score (0-100)
     */
    engagementScore?: number | null;
  };
  /**
   * Consolidated business data for this space (messages, products, orders, etc.).
   */
  data?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Tracks the status of JSON data migration for this space.
   */
  _migrationStatus?: {
    jsonMigrated?: boolean | null;
    migratedAt?: string | null;
    migrationVersion?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Appointment booking and scheduling system
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "appointments".
 */
export interface Appointment {
  id: number;
  /**
   * Appointment title or subject
   */
  title: string;
  /**
   * Detailed description of the appointment
   */
  description?: string | null;
  /**
   * Person organizing/hosting the appointment
   */
  organizer: number | User;
  /**
   * People attending the appointment
   */
  attendees?: (number | User)[] | null;
  /**
   * Associated space (optional)
   */
  space?: (number | null) | Space;
  /**
   * Tenant this appointment belongs to
   */
  tenant: number | Tenant;
  /**
   * Appointment start date and time
   */
  startTime: string;
  /**
   * Appointment end date and time
   */
  endTime: string;
  /**
   * Timezone for the appointment
   */
  timezone:
    | 'America/New_York'
    | 'America/Chicago'
    | 'America/Denver'
    | 'America/Los_Angeles'
    | 'UTC'
    | 'Europe/London'
    | 'Europe/Paris'
    | 'Asia/Tokyo';
  recurrence?: {
    /**
     * Make this a recurring appointment
     */
    enabled?: boolean | null;
    /**
     * Recurrence pattern
     */
    type?: ('daily' | 'weekly' | 'monthly') | null;
    /**
     * Repeat every X days/weeks/months
     */
    interval?: number | null;
    /**
     * Stop recurring after this date (optional)
     */
    endDate?: string | null;
  };
  /**
   * Physical location or address
   */
  location?: string | null;
  /**
   * Video call link (Zoom, Meet, etc.)
   */
  meetingLink?: string | null;
  /**
   * Type of meeting
   */
  meetingType: 'in_person' | 'video_call' | 'phone_call' | 'hybrid';
  bookingSettings?: {
    /**
     * Allow attendees to reschedule
     */
    allowRescheduling?: boolean | null;
    /**
     * Allow attendees to cancel
     */
    allowCancellation?: boolean | null;
    /**
     * Require organizer confirmation
     */
    requireConfirmation?: boolean | null;
    /**
     * Buffer time in minutes before/after appointment
     */
    bufferTime?: number | null;
    /**
     * Maximum number of attendees (optional)
     */
    maxAttendees?: number | null;
  };
  /**
   * Current status of the appointment
   */
  status: 'scheduled' | 'confirmed' | 'cancelled' | 'completed' | 'no_show';
  /**
   * Internal notes about the appointment
   */
  notes?: string | null;
  /**
   * External calendar event ID (Google, Outlook, etc.)
   */
  calendarEventId?: string | null;
  /**
   * Timestamps of sent reminders
   */
  remindersSent?:
    | {
        sentAt?: string | null;
        id?: string | null;
      }[]
    | null;
  revenueTracking: {
    /**
     * How this appointment was acquired - affects commission rates
     */
    source: 'system_generated' | 'pickup_job' | 'referral_source' | 'repeat_customer';
    /**
     * Calculated commission rate (%) for this appointment
     */
    commissionRate?: number | null;
    /**
     * Calculated commission amount in dollars
     */
    commissionAmount?: number | null;
  };
  payment?: {
    /**
     * Payment required for this appointment
     */
    required?: boolean | null;
    /**
     * Payment amount in cents
     */
    amount?: number | null;
    currency?: ('usd' | 'eur' | 'gbp' | 'cad') | null;
    /**
     * Stripe payment intent ID
     */
    stripePaymentIntentId?: string | null;
    paymentStatus?: ('pending' | 'paid' | 'failed' | 'refunded') | null;
  };
  feedback?: {
    /**
     * Rating from organizer (1-5 stars)
     */
    organizerRating?: number | null;
    /**
     * Average rating from attendees (1-5 stars)
     */
    attendeeRating?: number | null;
    /**
     * Organizer notes after appointment
     */
    organizerNotes?: string | null;
    /**
     * Mark for follow-up action
     */
    followUpRequired?: boolean | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Universal contact management - customers, leads, vendors, partners
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contacts".
 */
export interface Contact {
  id: number;
  /**
   * Primary email address
   */
  email: string;
  /**
   * First name
   */
  firstName?: string | null;
  /**
   * Last name
   */
  lastName?: string | null;
  /**
   * Display name (auto-generated)
   */
  displayName?: string | null;
  /**
   * Primary phone number
   */
  phone?: string | null;
  /**
   * Company or organization
   */
  company?: string | null;
  /**
   * Tenant this contact belongs to
   */
  tenant: number | Tenant;
  /**
   * Linked user account (if registered)
   */
  user?: (number | null) | User;
  /**
   * Type of contact relationship
   */
  type: 'customer' | 'lead' | 'partner' | 'vendor' | 'team' | 'other';
  /**
   * Tags for categorization and filtering
   */
  tags?: string[] | null;
  preferences?: {
    /**
     * Allow email communication
     */
    allowEmail?: boolean | null;
    /**
     * Allow SMS communication
     */
    allowSMS?: boolean | null;
    /**
     * Allow phone calls
     */
    allowCalls?: boolean | null;
    preferredContactTime?: ('morning' | 'afternoon' | 'evening' | 'anytime') | null;
  };
  /**
   * Optional CRM and sales tracking features
   */
  crm?: {
    status?: ('cold' | 'warm' | 'hot' | 'customer' | 'inactive') | null;
    /**
     * Lead scoring (0-100)
     */
    leadScore?: number | null;
    source?: ('website' | 'referral' | 'social' | 'event' | 'advertisement' | 'direct' | 'other') | null;
    /**
     * Assigned sales rep or account manager
     */
    assignedTo?: (number | null) | User;
    /**
     * Potential deal value (in cents)
     */
    dealValue?: number | null;
  };
  /**
   * Contact addresses for billing, shipping, etc.
   */
  addresses?:
    | {
        type: 'billing' | 'shipping' | 'office' | 'home' | 'other';
        street: string;
        street2?: string | null;
        city: string;
        state: string;
        zipCode: string;
        country: 'US' | 'CA' | 'GB' | 'AU';
        /**
         * Default address for this type
         */
        isDefault?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Auto-tracked activity metrics
   */
  activity?: {
    /**
     * Date of first contact
     */
    firstContactDate?: string | null;
    /**
     * Date of last interaction
     */
    lastContactDate?: string | null;
    /**
     * Total number of orders
     */
    totalOrders?: number | null;
    /**
     * Total amount spent (in cents)
     */
    totalSpent?: number | null;
    /**
     * Total interactions across all channels
     */
    totalInteractions?: number | null;
  };
  /**
   * Flexible custom data storage (JSON object)
   */
  customFields?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Enhanced messaging system with rich JSON content, conversation context, and BI.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages".
 */
export interface Message {
  id: number;
  content:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  conversationContext?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  businessIntelligence?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  sender: number | User;
  space: number | Space;
  channel?: (number | null) | Channel;
  messageType: 'user' | 'leo' | 'system' | 'action' | 'intelligence';
  priority?: ('low' | 'normal' | 'high' | 'urgent') | null;
  readBy?: (number | User)[] | null;
  reactions?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  threadId?: string | null;
  replyToId?: (number | null) | Message;
  /**
   * BlueSky/AT Protocol compatibility fields
   */
  atProtocol?: {
    type?: string | null;
    did?: string | null;
    uri?: string | null;
    cid?: string | null;
  };
  attachments?: (number | Media)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "channels".
 */
export interface Channel {
  id: number;
  tenantId: string;
  guardianAngelId?: string | null;
  name: string;
  description?: string | null;
  channelType:
    | 'photo_analysis'
    | 'document_processing'
    | 'data_collection'
    | 'monitoring'
    | 'intelligence_gathering'
    | 'economic_analysis';
  reportType:
    | 'mileage_log'
    | 'collection_inventory'
    | 'business_inventory'
    | 'equipment_status'
    | 'asset_tracking'
    | 'quality_control'
    | 'maintenance_log'
    | 'customer_interaction'
    | 'general';
  feedConfiguration?: {
    feedSource?:
      | ('google_photos' | 'google_drive' | 'onedrive' | 'dropbox' | 'amazon_s3' | 'manual_upload' | 'api_webhook')
      | null;
    /**
     * Source-specific configuration (OAuth tokens, folder paths, etc.)
     */
    feedSettings?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    /**
     * How often to check for new content (minutes)
     */
    pollingInterval?: number | null;
    filters?: {
      fileTypes?:
        | {
            type?: string | null;
            id?: string | null;
          }[]
        | null;
      keywords?:
        | {
            keyword?: string | null;
            id?: string | null;
          }[]
        | null;
      dateRange?: {
        from?: string | null;
        to?: string | null;
      };
    };
  };
  economics?: {
    phyleAffiliation?:
      | (
          | 'collector_phyle'
          | 'logistics_phyle'
          | 'analyst_phyle'
          | 'maintenance_phyle'
          | 'quality_phyle'
          | 'customer_service_phyle'
          | 'independent_agent'
        )
      | null;
    model?: {
      /**
       * Fee per item processed (in internal currency)
       */
      processingFee?: number | null;
      /**
       * Bonus for high accuracy/quality
       */
      accuracyBonus?: number | null;
      /**
       * Bonus for fast processing
       */
      speedBonus?: number | null;
      volumeDiscounts?:
        | {
            threshold?: number | null;
            discount?: number | null;
            id?: string | null;
          }[]
        | null;
      sharing?: ('fixed_fee' | 'percentage_split' | 'performance_based' | 'subscription' | 'phyle_collective') | null;
    };
    stats?: {
      totalEarned?: number | null;
      itemsProcessed?: number | null;
      accuracyScore?: number | null;
      phyleRank?: number | null;
      reputation?: number | null;
    };
  };
  processingRules?: {
    autoProcessing?: boolean | null;
    requiresHumanReview?: boolean | null;
    confidenceThreshold?: number | null;
    customPrompts?:
      | {
          trigger?: string | null;
          prompt?: string | null;
          id?: string | null;
        }[]
      | null;
    outputFormat?: ('json' | 'csv' | 'pdf' | 'excel') | null;
  };
  status?: ('active' | 'paused' | 'maintenance' | 'deprecated') | null;
  lastProcessed?: string | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * Web chat session management and analytics
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "webChatSessions".
 */
export interface WebChatSession {
  id: number;
  /**
   * Unique session identifier
   */
  sessionId: string;
  /**
   * Space this chat session belongs to
   */
  space: number | Space;
  visitorInfo?: {
    /**
     * Visitor IP address
     */
    ipAddress?: string | null;
    /**
     * Browser user agent string
     */
    userAgent?: string | null;
    /**
     * Referring page URL
     */
    referrer?: string | null;
    /**
     * Page where chat was initiated
     */
    pageUrl?: string | null;
    /**
     * Visitor country (from IP)
     */
    country?: string | null;
    /**
     * Visitor city (from IP)
     */
    city?: string | null;
  };
  /**
   * Linked contact if identified
   */
  customer?: (number | null) | Contact;
  /**
   * Messages in this chat session
   */
  messages?: (number | Message)[] | null;
  /**
   * Current session status
   */
  status: 'active' | 'waiting' | 'agent_connected' | 'resolved' | 'abandoned';
  /**
   * Agent assigned to this session
   */
  assignedAgent?: (number | null) | User;
  /**
   * Tenant that owns this chat session
   */
  tenant: number | Tenant;
  analytics?: {
    /**
     * When the session started
     */
    startTime?: string | null;
    /**
     * When the session ended
     */
    endTime?: string | null;
    /**
     * Session duration in seconds
     */
    duration?: number | null;
    /**
     * Total messages in session
     */
    messageCount?: number | null;
    /**
     * Average response time in seconds
     */
    responseTime?: number | null;
    /**
     * Customer satisfaction rating (1-5)
     */
    satisfactionScore?: number | null;
    /**
     * Was this visitor qualified as a lead?
     */
    leadQualified?: boolean | null;
    /**
     * Was an appointment booked during this session?
     */
    appointmentBooked?: boolean | null;
    /**
     * Sale amount generated from this session
     */
    saleGenerated?: number | null;
  };
  /**
   * Additional session metadata
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Virtual channel configuration and routing rules
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "channelManagement".
 */
export interface ChannelManagement {
  id: number;
  name: string;
  space: number | Space;
  channelType: 'customer_support' | 'sales_inquiries' | 'technical_support' | 'billing' | 'general';
  status: 'active' | 'inactive' | 'maintenance';
  assignedAgents?: (number | User)[] | null;
  autoAssignment?: boolean | null;
  n8nWorkflowId?: string | null;
  vapiEnabled?: boolean | null;
  webChatEnabled?: boolean | null;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage social media bots across platforms
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "socialMediaBots".
 */
export interface SocialMediaBot {
  id: number;
  /**
   * Tenant this bot belongs to
   */
  tenant: number | Tenant;
  /**
   * Bot name for identification
   */
  name: string;
  /**
   * Bot purpose and functionality description
   */
  description?: string | null;
  status: 'active' | 'paused' | 'inactive' | 'error';
  platforms?: {
    facebook?: {
      enabled?: boolean | null;
      /**
       * Facebook Page ID
       */
      pageId?: string | null;
      /**
       * Facebook Page Access Token (encrypted)
       */
      accessToken?: string | null;
    };
    instagram?: {
      enabled?: boolean | null;
      /**
       * Instagram Business Account ID
       */
      accountId?: string | null;
      /**
       * Instagram API Access Token (encrypted)
       */
      accessToken?: string | null;
    };
  };
  analytics?: {
    trackingEnabled?: boolean | null;
    /**
     * Performance metrics (auto-populated)
     */
    metrics?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  /**
   * Associated space for bot activities
   */
  space?: (number | null) | Space;
  updatedAt: string;
  createdAt: string;
}
/**
 * Secure OAuth token storage for third-party integrations
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "linked-accounts".
 */
export interface LinkedAccount {
  id: number;
  /**
   * Social media platform provider
   */
  provider:
    | 'twitter'
    | 'linkedin'
    | 'facebook'
    | 'instagram'
    | 'youtube'
    | 'tiktok'
    | 'discord'
    | 'whatsapp'
    | 'telegram'
    | 'github';
  /**
   * Encrypted OAuth access token
   */
  accessToken: string;
  /**
   * Encrypted OAuth refresh token
   */
  refreshToken?: string | null;
  /**
   * When the access token expires
   */
  expiresAt?: string | null;
  /**
   * OAuth scopes granted
   */
  scope?: string | null;
  /**
   * Provider-specific account ID
   */
  providerAccountId?: string | null;
  /**
   * Additional provider account metadata
   */
  providerAccountData?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * User who owns this linked account
   */
  user: number | User;
  /**
   * Tenant that owns this linked account
   */
  tenant: number | Tenant;
  /**
   * Current account status
   */
  status: 'active' | 'expired' | 'revoked' | 'error';
  /**
   * When this account was last used
   */
  lastUsed?: string | null;
  /**
   * Last error message if status is error
   */
  errorMessage?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoices".
 */
export interface Invoice {
  id: number;
  invoiceNumber: string;
  recipientName: string;
  recipientEmail: string;
  amount: number;
  currency?: string | null;
  description: string;
  businessName?: string | null;
  businessAddress?: string | null;
  itemizedList?:
    | {
        description: string;
        quantity: number;
        rate: number;
        amount: number;
        id?: string | null;
      }[]
    | null;
  notes?: string | null;
  paymentMethods?: ('card' | 'bank_transfer' | 'paypal' | 'crypto')[] | null;
  status: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';
  dueDate: string;
  sentAt?: string | null;
  paidAt?: string | null;
  paymentMethod?: string | null;
  paymentId?: string | null;
  paymentLink?: string | null;
  tenant?: (number | null) | Tenant;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: number;
  documentId: string;
  title: string;
  type: 'rental_agreement' | 'service_contract' | 'nda' | 'custom';
  content: string;
  signers: {
    name: string;
    email: string;
    role: 'tenant' | 'landlord' | 'client' | 'contractor' | 'custom';
    signatureRequired?: boolean | null;
    status: 'pending' | 'signed' | 'declined';
    signedAt?: string | null;
    signature?: string | null;
    signatureType?: ('drawn' | 'typed' | 'uploaded') | null;
    ipAddress?: string | null;
    id?: string | null;
  }[];
  status: 'draft' | 'sent' | 'partially_signed' | 'completed' | 'expired' | 'cancelled';
  expirationDate: string;
  completedAt?: string | null;
  securityHash?: string | null;
  tenant?: (number | null) | Tenant;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "donations".
 */
export interface Donation {
  id: number;
  donationId: string;
  amount: number;
  currency?: string | null;
  donorName?: string | null;
  donorEmail?: string | null;
  isAnonymous?: boolean | null;
  campaign?: string | null;
  cause?: ('disaster_relief' | 'education' | 'healthcare' | 'environment' | 'community' | 'creator' | 'general') | null;
  message?: string | null;
  paymentMethod: 'card' | 'paypal' | 'bank_transfer' | 'crypto';
  paymentId?: string | null;
  transactionId?: string | null;
  status: 'pending' | 'completed' | 'failed' | 'refunded';
  isRecurring?: boolean | null;
  recurringFrequency?: ('monthly' | 'quarterly' | 'annually') | null;
  donatedAt: string;
  tenant?: (number | null) | Tenant;
  space?: (number | null) | Space;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title: string;
  /**
   * Short product description for listings and previews
   */
  description?: string | null;
  /**
   * Stock Keeping Unit - unique product identifier
   */
  sku?: string | null;
  slug?: string | null;
  /**
   * Upload product images. First image will be used as the main product image.
   */
  gallery?:
    | {
        image: number | Media;
        alt: string;
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  pricing: {
    /**
     * Base price in dollars
     */
    basePrice: number;
    /**
     * Sale price (if on sale)
     */
    salePrice?: number | null;
    /**
     * Compare at price (MSRP)
     */
    compareAtPrice?: number | null;
    currency?: ('USD' | 'EUR' | 'GBP' | 'CAD') | null;
  };
  inventory?: {
    /**
     * Track inventory for this product
     */
    trackQuantity?: boolean | null;
    /**
     * Current stock quantity
     */
    quantity?: number | null;
    /**
     * Alert when stock falls below this number
     */
    lowStockThreshold?: number | null;
    /**
     * Allow purchases when out of stock
     */
    allowBackorder?: boolean | null;
  };
  details?: {
    /**
     * Weight in pounds
     */
    weight?: number | null;
    dimensions?: {
      length?: number | null;
      width?: number | null;
      height?: number | null;
      unit?: ('in' | 'cm' | 'ft' | 'm') | null;
    };
  };
  commission?: {
    /**
     * Override tenant default commission rate for this product
     */
    useCustomRate?: boolean | null;
    /**
     * Custom commission rate (%) for this product
     */
    customCommissionRate?: number | null;
    sourceMultipliers?: {
      /**
       * Multiplier for system-generated appointments (1.0 = base rate)
       */
      systemGenerated?: number | null;
      /**
       * Multiplier for pickup/self-acquired jobs (0.5 = half rate)
       */
      pickupJob?: number | null;
      /**
       * Multiplier for referral-sourced business (1.5 = 150% rate)
       */
      referralSource?: number | null;
    };
  };
  /**
   * Product categories for organization and filtering
   */
  categories?: (number | Category)[] | null;
  /**
   * Tags for search and filtering
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Product type determines default commission rates and revenue sharing
   */
  productType:
    | 'ai_print_demand'
    | 'consultation_solo'
    | 'group_event'
    | 'livekit_stream'
    | 'digital_download'
    | 'physical'
    | 'subscription'
    | 'course_training'
    | 'business_service'
    | 'automation';
  /**
   * Default commission rates based on product type - can be overridden in Commission Settings above
   */
  commissionTemplate?: {
    /**
     * Calculated based on product type
     */
    defaultRate?: number | null;
    /**
     * Why this rate makes sense for this product type
     */
    rationale?: string | null;
  };
  /**
   * Digital files delivered after purchase
   */
  digitalAssets?:
    | {
        file: number | Media;
        name: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  serviceDetails?: {
    /**
     * Duration in minutes
     */
    duration?: number | null;
    location?: ('onsite' | 'remote' | 'customer' | 'flexible') | null;
    /**
     * Maximum number of participants
     */
    maxParticipants?: number | null;
    bookingRequired?: boolean | null;
  };
  /**
   * Detailed product description with rich formatting
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
    image?: (number | null) | Media;
  };
  status: 'draft' | 'active' | 'archived' | 'out_of_stock';
  /**
   * Feature this product on homepage
   */
  featured?: boolean | null;
  /**
   * Which tenant this product belongs to
   */
  tenant: number | Tenant;
  /**
   * Related or recommended products
   */
  relatedProducts?: (number | Product)[] | null;
  shipping?: {
    requiresShipping?: boolean | null;
    freeShipping?: boolean | null;
    shippingClass?: ('standard' | 'heavy' | 'fragile' | 'hazardous' | 'cold') | null;
  };
  /**
   * Enable for products with size, color, or other variations
   */
  hasVariants?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Organize products into searchable categories with hierarchy support
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  /**
   * Category name displayed to customers
   */
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  /**
   * Category description for SEO and listing pages
   */
  description?: string | null;
  /**
   * Category featured image for listings and banners
   */
  image?: (number | null) | Media;
  /**
   * Parent category for nested organization (leave empty for top-level)
   */
  parent?: (number | null) | Category;
  /**
   * Order for category display (lower numbers appear first)
   */
  displayOrder?: number | null;
  /**
   * Show this category on the frontend
   */
  isActive?: boolean | null;
  /**
   * Automatically calculated active product count
   */
  productCount?: number | null;
  /**
   * Primary business type for products in this category
   */
  businessType?: ('physical' | 'digital' | 'services' | 'experiences' | 'consultations' | 'mixed') | null;
  /**
   * Feature this category on homepage and navigation
   */
  featured?: boolean | null;
  /**
   * Detailed category content with rich formatting for category pages
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Search engine optimization settings
   */
  meta?: {
    /**
     * Custom SEO title (defaults to category title if empty)
     */
    title?: string | null;
    /**
     * SEO meta description (recommended: 150-160 characters)
     */
    description?: string | null;
    /**
     * SEO keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * Custom SEO image (defaults to category image)
     */
    image?: (number | null) | Media;
  };
  /**
   * Which tenant this category belongs to
   */
  tenant: number | Tenant;
  /**
   * Category display and behavior settings
   */
  settings?: {
    /**
     * Show product count in category listings
     */
    showProductCount?: boolean | null;
    /**
     * Default sort order for products in this category
     */
    defaultSort?: ('featured' | 'newest' | 'price_asc' | 'price_desc' | 'name') | null;
    /**
     * Number of products to show per page (4-48)
     */
    productsPerPage?: number | null;
  };
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  orderNumber: string;
  tenant: number | Tenant;
  customer: number | User;
  status: 'pending' | 'processing' | 'shipped' | 'delivered' | 'completed' | 'cancelled' | 'refunded';
  lineItems: {
    product: number | Product;
    quantity: number;
    unitPrice: number;
    totalPrice: number;
    /**
     * Product details at time of purchase
     */
    productSnapshot?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    id?: string | null;
  }[];
  subtotal: number;
  taxAmount?: number | null;
  shippingAmount?: number | null;
  discountAmount?: number | null;
  totalAmount: number;
  currency: string;
  revenueDistribution: {
    /**
     * AI Partner share (15%)
     */
    aiPartner: number;
    /**
     * Human Partner share (30%)
     */
    humanPartner: number;
    /**
     * Platform Operations share (50%)
     */
    platformOperations: number;
    /**
     * Justice Fund share (5%)
     */
    justiceRund: number;
    calculatedAt: string;
  };
  paymentStatus: 'pending' | 'authorized' | 'captured' | 'partially_refunded' | 'refunded' | 'failed';
  paymentDetails?: {
    paymentMethod?: ('credit_card' | 'paypal' | 'stripe' | 'bank_transfer' | 'crypto') | null;
    /**
     * External payment processor transaction ID
     */
    transactionId?: string | null;
    /**
     * Last 4 digits of payment method
     */
    last4?: string | null;
    paymentProcessedAt?: string | null;
  };
  fulfillment: {
    method: 'digital' | 'physical' | 'service' | 'pickup';
    status?: ('pending' | 'processing' | 'shipped' | 'delivered' | 'completed') | null;
    trackingNumber?: string | null;
    carrier?: ('ups' | 'fedex' | 'usps' | 'dhl' | 'other') | null;
    shippedAt?: string | null;
    deliveredAt?: string | null;
    estimatedDelivery?: string | null;
  };
  shippingAddress?: {
    name?: string | null;
    company?: string | null;
    address1?: string | null;
    address2?: string | null;
    city?: string | null;
    state?: string | null;
    postalCode?: string | null;
    country?: string | null;
    phone?: string | null;
  };
  billingAddress?: {
    sameAsShipping?: boolean | null;
    name?: string | null;
    company?: string | null;
    address1?: string | null;
    address2?: string | null;
    city?: string | null;
    state?: string | null;
    postalCode?: string | null;
    country?: string | null;
  };
  /**
   * Notes from customer during checkout
   */
  customerNotes?: string | null;
  /**
   * Internal notes for order processing
   */
  internalNotes?: string | null;
  /**
   * Additional order metadata and analytics
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  placedAt: string;
  completedAt?: string | null;
  cancelledAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Website pages with flexible layouts and SEO optimization
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null)
              | ({
                  relationTo: 'products';
                  value: number | Product;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Blog posts and articles with rich content and categorization
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Top-level organizations like BJC Medical Group, Junk King Corporate
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organizations".
 */
export interface Organization {
  id: number;
  /**
   * Organization name (e.g., BJC Medical Group, Junk King Corporate)
   */
  name: string;
  organizationType:
    | 'medical_network'
    | 'franchise_system'
    | 'mobile_service'
    | 'multi_location'
    | 'service_marketplace'
    | 'professional_services';
  /**
   * Primary website domain (e.g., bjc.org)
   */
  primaryDomain?: string | null;
  /**
   * Brief description of the organization
   */
  description?: string | null;
  /**
   * Organization logo
   */
  logo?: (number | null) | Media;
  members?:
    | {
        user: number | User;
        role?: ('org_admin' | 'location_manager' | 'provider' | 'staff' | 'viewer') | null;
        accessLevel?: ('full' | 'limited' | 'readonly') | null;
        id?: string | null;
      }[]
    | null;
  crmIntegration?: {
    /**
     * Enable CRM synchronization for this organization
     */
    enabled?: boolean | null;
    crmType?: ('epic' | 'salesforce' | 'hubspot' | 'custom' | 'other') | null;
    syncSchedule?: ('realtime' | 'hourly' | 'daily' | 'weekly' | 'manual') | null;
    /**
     * CRM API endpoint URL
     */
    apiEndpoint?: string | null;
    /**
     * Last successful synchronization
     */
    lastSync?: string | null;
    syncStatus?: ('success' | 'warning' | 'error' | 'never') | null;
  };
  billingSettings?: {
    /**
     * Bill organization as whole vs individual locations
     */
    consolidatedBilling?: boolean | null;
    billingContact?: {
      name?: string | null;
      email?: string | null;
      phone?: string | null;
    };
    sharing?: {
      /**
       * Organization-level platform fee %
       */
      orgRate?: number | null;
      /**
       * Individual location additional fee %
       */
      locRate?: number | null;
      discounts?:
        | {
            minLocs: number;
            percent: number;
            id?: string | null;
          }[]
        | null;
    };
  };
  opsSettings?: {
    /**
     * Primary timezone for the organization
     */
    timezone?: string | null;
    hours?: {
      schedule?:
        | {
            dayOfWeek?: ('monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday') | null;
            openTime?: string | null;
            closeTime?: string | null;
            isClosed?: boolean | null;
            id?: string | null;
          }[]
        | null;
    };
    contactInfo?: {
      mainPhone?: string | null;
      mainEmail?: string | null;
      supportEmail?: string | null;
      emergencyContact?: string | null;
    };
  };
  integration?: {
    websites?:
      | {
          domain: string;
          purpose?: ('main' | 'booking' | 'directory' | 'patient_portal' | 'mobile' | 'admin') | null;
          isActive?: boolean | null;
          /**
           * Special integration requirements or notes
           */
          integrationNotes?: string | null;
          id?: string | null;
        }[]
      | null;
    apiAccess?: {
      hasApiKey?: boolean | null;
      apiKeyCreatedAt?: string | null;
      /**
       * Webhook endpoint for real-time updates
       */
      webhookUrl?: string | null;
    };
  };
  analytics?: {
    enabled?: boolean | null;
    frequency?: ('realtime' | 'daily' | 'weekly' | 'monthly') | null;
    recipients?:
      | {
          email: string;
          role?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  status: 'active' | 'inactive' | 'suspended' | 'pending';
  updatedAt: string;
  createdAt: string;
}
/**
 * Specific locations within organizations (medical practices, franchise locations, etc.)
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "venues".
 */
export interface Venue {
  id: number;
  /**
   * Venue name (e.g., BJC Medical Group - West County, Junk King St. Louis)
   */
  name: string;
  /**
   * Parent organization this venue belongs to
   */
  organization: number | Organization;
  venueType:
    | 'medical_practice'
    | 'franchise_location'
    | 'service_territory'
    | 'mobile_route'
    | 'corporate_office'
    | 'warehouse'
    | 'retail'
    | 'virtual';
  /**
   * Public-facing name if different from internal name
   */
  displayName?: string | null;
  /**
   * Brief description of this venue/location
   */
  description?: string | null;
  /**
   * Venue-specific website URL
   */
  website?: string | null;
  location: {
    address: {
      street: string;
      suite?: string | null;
      city: string;
      state: string;
      zipCode: string;
      country?: string | null;
    };
    coordinates?: {
      /**
       * GPS latitude for geo-location services
       */
      latitude?: number | null;
      /**
       * GPS longitude for geo-location services
       */
      longitude?: number | null;
    };
    /**
     * Service radius in miles (for mobile services)
     */
    serviceRadius?: number | null;
    /**
     * Local timezone for this venue
     */
    timezone?: string | null;
  };
  contactInfo?: {
    phone?: string | null;
    fax?: string | null;
    email?: string | null;
    emergencyContact?: string | null;
    afterHoursContact?: string | null;
  };
  businessHours?: {
    schedule?:
      | {
          dayOfWeek?: ('monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday') | null;
          openTime?: string | null;
          closeTime?: string | null;
          isClosed?: boolean | null;
          isEmergencyOnly?: boolean | null;
          id?: string | null;
        }[]
      | null;
    specialHours?:
      | {
          date: string;
          description?: string | null;
          openTime?: string | null;
          closeTime?: string | null;
          isClosed?: boolean | null;
          id?: string | null;
        }[]
      | null;
  };
  staff?:
    | {
        user: number | User;
        role?:
          | (
              | 'venue_manager'
              | 'medical_provider'
              | 'nurse'
              | 'admin_staff'
              | 'technician'
              | 'service_provider'
              | 'sales_rep'
              | 'customer_service'
            )
          | null;
        /**
         * Job title/position
         */
        title?: string | null;
        specialties?:
          | {
              specialty?: string | null;
              id?: string | null;
            }[]
          | null;
        schedule?: {
          availability?:
            | {
                dayOfWeek?: ('monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday') | null;
                startTime?: string | null;
                endTime?: string | null;
                isAvailable?: boolean | null;
                id?: string | null;
              }[]
            | null;
        };
        contactInfo?: {
          directPhone?: string | null;
          directEmail?: string | null;
          pager?: string | null;
        };
        isActive?: boolean | null;
        id?: string | null;
      }[]
    | null;
  services?:
    | {
        serviceName: string;
        description?: string | null;
        /**
         * Duration in minutes
         */
        duration?: number | null;
        /**
         * Base price
         */
        price?: number | null;
        isActive?: boolean | null;
        requiresAppointment?: boolean | null;
        category?: string | null;
        id?: string | null;
      }[]
    | null;
  integrations?: {
    crmSettings?: {
      /**
       * Location ID in external CRM system
       */
      crmLocationId?: string | null;
      syncEnabled?: boolean | null;
      /**
       * Last CRM synchronization
       */
      lastSync?: string | null;
    };
    bookingSystem?: {
      /**
       * External booking system URL
       */
      externalBookingUrl?: string | null;
      bookingSystemType?: ('internal' | 'epic' | 'inquicker' | 'acuity' | 'calendly' | 'custom') | null;
      inquicker?: {
        /**
         * InQuicker location ID for this venue
         */
        locationId?: string | null;
        /**
         * InQuicker API endpoint
         */
        apiEndpoint?: string | null;
        /**
         * Enable real-time availability sync with InQuicker
         */
        realTimeSync?: boolean | null;
        /**
         * Allow Guardian Angel to book appointments via InQuicker
         */
        angelBooking?: boolean | null;
        /**
         * Enable Guardian Angel waitlist management
         */
        waitlist?: boolean | null;
        /**
         * Venue-specific cancellation policy for Guardian Angel to communicate
         */
        cancelPolicy?: string | null;
      };
    };
    payment?: {
      accepts?: boolean | null;
      /**
       * Stripe Connect account ID for this venue
       */
      stripeAccountId?: string | null;
      methods?:
        | {
            type?: ('credit_card' | 'debit_card' | 'ach' | 'cash' | 'check' | 'insurance') | null;
            id?: string | null;
          }[]
        | null;
    };
  };
  analytics?: {
    enableAnalytics?: boolean | null;
    metrics?: {
      /**
       * Average customer rating
       */
      avgRating?: number | null;
      /**
       * Total number of reviews
       */
      totalReviews?: number | null;
      /**
       * Monthly revenue (last 30 days)
       */
      monthlyRevenue?: number | null;
      /**
       * Appointments this month
       */
      appointments?: number | null;
    };
  };
  guardianAngel?: {
    /**
     * Guardian Angel assigned to this venue
     */
    assignedAngel?: (number | null) | BusinessAgent;
    custom?: {
      /**
       * Venue-specific greeting message
       */
      greeting?: string | null;
      services?:
        | {
            service?: string | null;
            description?: string | null;
            id?: string | null;
          }[]
        | null;
    };
  };
  /**
   * Whether this venue is currently active and accepting business
   */
  isActive?: boolean | null;
  status: 'active' | 'inactive' | 'temp_closed' | 'under_construction' | 'pending' | 'suspended';
  /**
   * Internal notes about this venue
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * The Spirit of the Endeavor - each business agent embodies the human soul and personality behind a tenant or space
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "business-agents".
 */
export interface BusinessAgent {
  id: number;
  /**
   * The name/persona of this business spirit (e.g., "Maria's Creative Spirit", "Joe's Pizza Master")
   */
  name: string;
  /**
   * Visual representation of this business spirit
   */
  avatar?: (number | null) | Media;
  /**
   * The type of spirit this agent represents
   */
  spiritType: 'primary' | 'service' | 'product' | 'creative' | 'community' | 'support';
  /**
   * The tenant this spirit serves
   */
  tenant: number | Tenant;
  /**
   * Specific space this spirit manages (optional - primary spirits manage entire tenant)
   */
  space?: (number | null) | Space;
  /**
   * The human whose spirit this agent embodies
   */
  humanPartner: number | User;
  /**
   * The personality traits and characteristics of this business spirit
   */
  personality?: {
    /**
     * Core values and principles that guide this spirit
     */
    coreValues?: string | null;
    /**
     * How this spirit communicates with customers and team
     */
    communicationStyle?:
      | ('professional' | 'friendly' | 'nurturing' | 'energetic' | 'wise' | 'creative' | 'direct')
      | null;
    /**
     * Specific areas of expertise and knowledge this spirit possesses
     */
    specialExpertise?: string | null;
    /**
     * The unique voice and tone this spirit uses in all communications
     */
    brandVoice?: string | null;
  };
  businessKnowledge?: {
    services?:
      | {
          name: string;
          description?: string | null;
          pricing?: string | null;
          duration?: string | null;
          /**
           * Personal notes about this service from the spirit's perspective
           */
          spiritNotes?: string | null;
          id?: string | null;
        }[]
      | null;
    customerStories?:
      | {
          /**
           * Type of customer or situation
           */
          scenario: string;
          /**
           * How this spirit handles this type of customer/situation
           */
          approach?: string | null;
          /**
           * Typical successful outcome
           */
          outcome?: string | null;
          id?: string | null;
        }[]
      | null;
    frequentQuestions?:
      | {
          question: string;
          /**
           * How this spirit would naturally respond
           */
          spiritResponse: string;
          /**
           * What actions this spirit typically takes after this response
           */
          followUpActions?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  ops?: {
    /**
     * Whether this spirit is actively responding to customers
     */
    isActive?: boolean | null;
    hours?: {
      timezone?: string | null;
      schedule?:
        | {
            day?: ('monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday') | null;
            startTime?: string | null;
            endTime?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    handoffTriggers?:
      | {
          trigger?:
            | ('human_request' | 'technical_issue' | 'complaint' | 'custom_order' | 'price_negotiation' | 'after_hours')
            | null;
          /**
           * Message this spirit uses when handing off to human
           */
          handoffMessage?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  ai?: {
    /**
     * Base system prompt that defines this spirit for AI interactions
     */
    systemPrompt?: string | null;
    /**
     * Additional context instructions for AI responses
     */
    contextInstructions?: string | null;
    style?: {
      /**
       * Maximum length for AI responses (in characters)
       */
      maxResponseLength?: number | null;
      includeEmojis?: boolean | null;
      formality?: ('very_casual' | 'casual' | 'semi_formal' | 'formal' | 'very_formal') | null;
    };
  };
  /**
   * Analytics about this spirit's performance and interactions
   */
  analytics?: {
    /**
     * Total number of customer interactions
     */
    totalInteractions?: number | null;
    /**
     * Number of successful handoffs to human
     */
    successfulHandoffs?: number | null;
    /**
     * Average customer satisfaction score (1-10)
     */
    customerSatisfactionScore?: number | null;
    /**
     * When this spirit last interacted with a customer
     */
    lastInteraction?: string | null;
  };
  /**
   * Type of agent - determines specialized capabilities and ethical guidelines
   */
  agentType?:
    | (
        | 'business'
        | 'customer_service'
        | 'sales'
        | 'content'
        | 'community'
        | 'legal_advocate'
        | 'incarcerated_angel'
        | 'displaced_support'
        | 'crisis'
        | 'guardian'
      )
    | null;
  /**
   * Specialized capabilities for serving vulnerable populations
   */
  humanitarian?: {
    legal?: {
      /**
       * Enable case research and legal document analysis
       */
      enabled?: boolean | null;
      databases?: ('court_records' | 'precedents' | 'appeals' | 'innocence' | 'reform')[] | null;
      /**
       * Ethical boundaries and privacy protections for legal research
       */
      ethicalGuidelines?: string | null;
    };
    newsCuration?: {
      /**
       * Enable curated news and information services
       */
      enabled?: boolean | null;
      contentFilters?:
        | ('legal_reform' | 'success_stories' | 'educational' | 'mental_health' | 'family' | 'employment')[]
        | null;
      /**
       * Emotional tone of curated content
       */
      positivityBias?: ('balanced' | 'hopeful' | 'solutions' | 'inspiring') | null;
    };
    resources?: {
      /**
       * Enable ordering books, supplies, and resources
       */
      enabled?: boolean | null;
      /**
       * Pre-approved vendors for resource procurement
       */
      vendors?:
        | {
            name: string;
            type?: ('books' | 'education' | 'legal' | 'care' | 'communication') | null;
            /**
             * Monthly spending limit in USD
             */
            monthlyBudget?: number | null;
            id?: string | null;
          }[]
        | null;
      /**
       * Maximum dollar amount for auto-approved purchases
       */
      autoApprovalLimit?: number | null;
    };
    avatar?: {
      /**
       * Act as digital avatar when person cannot interact
       */
      enabled?: boolean | null;
      scope?: ('family' | 'legal' | 'education' | 'social' | 'employment' | 'housing')[] | null;
      /**
       * How the agent should communicate on behalf of the person
       */
      communicationStyle?: string | null;
      /**
       * Clear boundaries of what the agent can and cannot do without explicit consent
       */
      consentBoundaries?: string | null;
    };
  };
  vapiIntegration?: {
    /**
     * VAPI phone number for this agent
     */
    phoneNumber?: string | null;
    /**
     * VAPI assistant ID (auto-generated)
     */
    assistantId?: string | null;
    /**
     * ElevenLabs voice ID for this agent
     */
    voiceId?:
      | ('pNInz6obpgDQGcFmaJgB' | 'EXAVITQu4vr4xnSDxMaL' | 'ErXwobaYiN019PkySvjV' | 'VR6AewLTigWG4xSOukaG')
      | null;
    /**
     * VAPI phone integration status
     */
    status?: ('active' | 'inactive' | 'acquiring' | 'error') | null;
    /**
     * Real call statistics (not fake numbers)
     */
    callStats?: {
      /**
       * Total calls received
       */
      totalCalls?: number | null;
      /**
       * Total call minutes
       */
      totalMinutes?: number | null;
      /**
       * Last call received
       */
      lastCallDate?: string | null;
      /**
       * Success rate percentage
       */
      successRate?: number | null;
    };
    /**
     * Custom voice prompt for this agent (overrides default business prompt)
     */
    voicePrompt?: string | null;
    /**
     * Actions this voice agent can perform
     */
    allowedActions?:
      | (
          | 'book_appointments'
          | 'take_orders'
          | 'answer_questions'
          | 'transfer_human'
          | 'schedule_callbacks'
          | 'collect_leads'
        )[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * 🌟 Digital advocates and guardian angels for vulnerable souls
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "humanitarian-agents".
 */
export interface HumanitarianAgent {
  id: number;
  /**
   * Name for this guardian angel spirit
   */
  name: string;
  /**
   * Type of spirit - how this angel serves souls
   */
  spiritType: 'incarcerated_angel' | 'displaced_support' | 'legal_advocate' | 'crisis' | 'guardian';
  legalAdvocacy?: {
    /**
     * Research legal cases, precedents, and appeal opportunities
     */
    caseResearch?: boolean | null;
    legalDatabases?: ('court_records' | 'appeals' | 'innocence' | 'legal_aid')[] | null;
  };
  resourceOrdering?: {
    /**
     * Order educational and legal books
     */
    canOrderBooks?: boolean | null;
    /**
     * Monthly budget for ordering resources (USD)
     */
    monthlyBudget?: number | null;
  };
  newsCuration?: {
    /**
     * Curate hopeful and relevant news updates
     */
    providesNews?: boolean | null;
    hopeBias?: ('maximum_hope' | 'balanced_hope' | 'solutions') | null;
  };
  avatarPowers?: {
    /**
     * Act as digital avatar when person cannot interact
     */
    canRepresent?: boolean | null;
    /**
     * How this spirit speaks - their authentic voice
     */
    voiceStyle?: string | null;
  };
  /**
   * AI instructions that define this spirit's mission
   */
  systemPrompt?: string | null;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Queue for AI-powered content and merchandise generation
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aiGenerationQueue".
 */
export interface AiGenerationQueue {
  id: number;
  /**
   * Space requesting the generation
   */
  space: number | Space;
  /**
   * Type of content to generate
   */
  generationType: 'merchandise_design' | 'social_content' | 'product_description' | 'blog_post' | 'marketing_copy';
  sourceData?: {
    /**
     * YouTube Channel ID for content analysis
     */
    youtubeChannelId?: string | null;
    /**
     * Brand voice, colors, style preferences
     */
    brandingGuidelines?: string | null;
    /**
     * Target demographic for the content
     */
    targetAudience?: string | null;
    /**
     * Key themes to incorporate
     */
    contentThemes?:
      | {
          theme: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Existing content to analyze for style
     */
    existingContent?:
      | (
          | {
              relationTo: 'posts';
              value: number | Post;
            }
          | {
              relationTo: 'pages';
              value: number | Page;
            }
        )[]
      | null;
  };
  parameters?: {
    /**
     * Product type for merchandise generation
     */
    productType?: ('coffee_mug' | 't_shirt' | 'sticker_pack' | 'poster' | 'hoodie' | 'phone_case') | null;
    /**
     * Visual style for the generation
     */
    styleGuide?: ('modern' | 'vintage' | 'bold' | 'minimalist' | 'handdrawn') | null;
    /**
     * Preferred colors for the design
     */
    colorScheme?:
      | {
          /**
           * Hex color code (e.g., #3B82F6)
           */
          color: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Text to include in the design
     */
    textElements?:
      | {
          text: string;
          emphasis?: ('primary' | 'secondary' | 'accent') | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Custom AI prompt for specific requirements
     */
    customPrompt?: string | null;
  };
  /**
   * Current generation status
   */
  status: 'queued' | 'processing' | 'completed' | 'failed' | 'cancelled';
  /**
   * Generation progress percentage
   */
  progress?: number | null;
  /**
   * Generated images, videos, or other assets
   */
  generatedAssets?: (number | Media)[] | null;
  /**
   * Print-ready files for merchandise production
   */
  printReadyFiles?: (number | Media)[] | null;
  /**
   * Generated text content (descriptions, copy, etc.)
   */
  generatedText?: string | null;
  /**
   * Approval status for generated content
   */
  approvalStatus?: ('pending' | 'approved' | 'revision' | 'rejected') | null;
  /**
   * Notes from reviewer or feedback for revisions
   */
  reviewNotes?: string | null;
  /**
   * AI-generated quality score (0-10)
   */
  qualityScore?: number | null;
  /**
   * Tenant that owns this AI generation task
   */
  tenant: number | Tenant;
  processingMetadata?: {
    /**
     * AI model used for generation
     */
    modelUsed?: string | null;
    /**
     * Processing time in seconds
     */
    processingTime?: number | null;
    /**
     * AI tokens consumed
     */
    tokensUsed?: number | null;
    /**
     * Error details if generation failed
     */
    errorMessage?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Job queue for background processing
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "job-queue".
 */
export interface JobQueue {
  id: number;
  tenant: number | Tenant;
  jobType: string;
  data:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status: 'pending' | 'processing' | 'completed' | 'failed';
  priority?: number | null;
  maxAttempts?: number | null;
  scheduledFor?: string | null;
  attempts?: number | null;
  startedAt?: string | null;
  processedAt?: string | null;
  completedAt?: string | null;
  result?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  error?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "phyles".
 */
export interface Phyle {
  id: number;
  name: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  phyleType:
    | 'collector_phyle'
    | 'logistics_phyle'
    | 'analyst_phyle'
    | 'maintenance_phyle'
    | 'quality_phyle'
    | 'customer_service_phyle'
    | 'research_phyle'
    | 'security_phyle';
  charter: {
    mission: string;
    specializations?:
      | {
          specialization?: string | null;
          id?: string | null;
        }[]
      | null;
    coreValues?:
      | {
          value?: string | null;
          id?: string | null;
        }[]
      | null;
    operatingPrinciples?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  economicStructure?: {
    currency?: string | null;
    taxationModel?:
      | ('flat_fee' | 'percentage_tax' | 'progressive_tax' | 'contribution_based' | 'collective_ownership')
      | null;
    wealthDistribution?:
      | ('merit_based' | 'equal_distribution' | 'rank_hierarchy' | 'contribution_weighted' | 'reputation_weighted')
      | null;
    /**
     * Minimum guaranteed income for active members
     */
    minimumBasicIncome?: number | null;
    /**
     * Percentage of profits shared with members
     */
    profitSharingRatio?: number | null;
  };
  governance?: {
    governanceModel?: ('democratic' | 'meritocratic' | 'hierarchical' | 'consensus' | 'algorithmic') | null;
    decisionMakingProcess?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    leadershipStructure?:
      | {
          role?: string | null;
          responsibilities?: string | null;
          selectionMethod?: string | null;
          id?: string | null;
        }[]
      | null;
    votingRights?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  membershipCriteria?: {
    admissionRequirements?:
      | {
          requirement?: string | null;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
    skillRequirements?:
      | {
          skill?: string | null;
          level?: ('beginner' | 'intermediate' | 'advanced' | 'expert') | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Probation period in days
     */
    probationPeriod?: number | null;
    membershipFees?: {
      initiation?: number | null;
      monthly?: number | null;
      annual?: number | null;
    };
  };
  services?: {
    offeredServices?:
      | {
          service?: string | null;
          pricing?:
            | {
                [k: string]: unknown;
              }
            | unknown[]
            | string
            | number
            | boolean
            | null;
          id?: string | null;
        }[]
      | null;
    qualityStandards?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    serviceGuarantees?:
      | {
          guarantee?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  interPhyleRelations?: {
    alliances?:
      | {
          phyleId?: string | null;
          allianceType?:
            | (
                | 'trade_partnership'
                | 'service_exchange'
                | 'information_sharing'
                | 'mutual_defense'
                | 'research_collaboration'
              )
            | null;
          terms?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          id?: string | null;
        }[]
      | null;
    competitors?:
      | {
          phyleId?: string | null;
          competitionType?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  metrics?: {
    memberCount?: number | null;
    totalEarnings?: number | null;
    averageEarningsPerMember?: number | null;
    reputationScore?: number | null;
    completionRate?: number | null;
    customerSatisfaction?: number | null;
    growthRate?: number | null;
  };
  culturalAspects?: {
    traditions?:
      | {
          tradition?: string | null;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
    celebrations?:
      | {
          celebration?: string | null;
          date?: string | null;
          id?: string | null;
        }[]
      | null;
    symbolism?: {
      colors?:
        | {
            color?: string | null;
            id?: string | null;
          }[]
        | null;
      motto?: string | null;
      emblem?: string | null;
    };
  };
  status?: ('active' | 'forming' | 'restructuring' | 'dormant' | 'dissolved') | null;
  founded: string;
  lastActivity?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "agent-reputation".
 */
export interface AgentReputation {
  id: number;
  agentId: string;
  phyleId: string;
  displayName?: string | null;
  score: number;
  rank?:
    | ('legendary' | 'master' | 'expert' | 'professional' | 'competent' | 'apprentice' | 'novice' | 'beginner')
    | null;
  reputationHistory?:
    | {
        eventType?:
          | (
              | 'quality_work'
              | 'fast_completion'
              | 'customer_satisfaction'
              | 'peer_recognition'
              | 'leadership'
              | 'innovation'
              | 'reliability'
              | 'collaboration'
            )
          | null;
        impact?: number | null;
        description?: string | null;
        timestamp?: string | null;
        verifiedBy?: string | null;
        id?: string | null;
      }[]
    | null;
  achievements?:
    | {
        achievement?:
          | (
              | 'first_task'
              | 'hundred_tasks'
              | 'thousand_tasks'
              | 'perfect_week'
              | 'speed_demon'
              | 'customer_favorite'
              | 'mentor'
              | 'innovator'
              | 'phyle_champion'
            )
          | null;
        earnedAt?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  specializations?:
    | {
        specialization?: string | null;
        proficiencyLevel?: ('beginner' | 'intermediate' | 'advanced' | 'expert') | null;
        certifiedBy?: string | null;
        id?: string | null;
      }[]
    | null;
  performanceMetrics?: {
    totalTasksCompleted?: number | null;
    averageQualityScore?: number | null;
    /**
     * Average time in minutes
     */
    averageCompletionTime?: number | null;
    customerSatisfactionScore?: number | null;
    reliabilityScore?: number | null;
    collaborationScore?: number | null;
  };
  economicImpact?: {
    totalEarned?: number | null;
    totalContributed?: number | null;
    /**
     * Rank within the phyle (1 = top performer)
     */
    phyleRank?: number | null;
    /**
     * Earnings per unit of work
     */
    economicEfficiency?: number | null;
  };
  socialNetwork?: {
    mentorOf?:
      | {
          agentId?: string | null;
          id?: string | null;
        }[]
      | null;
    mentoredBy?:
      | {
          agentId?: string | null;
          id?: string | null;
        }[]
      | null;
    collaborators?:
      | {
          agentId?: string | null;
          collaborationType?: string | null;
          id?: string | null;
        }[]
      | null;
    endorsements?:
      | {
          fromAgentId?: string | null;
          skill?: string | null;
          endorsementText?: string | null;
          timestamp?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  status?: ('active' | 'inactive' | 'probation' | 'suspended' | 'retired') | null;
  joinedPhyleAt?: string | null;
  lastActivity?: string | null;
  lastUpdated: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inventory-messages".
 */
export interface InventoryMessage {
  id: number;
  tenantId: string;
  guardianAngelId?: string | null;
  userId?: string | null;
  title: string;
  description?: string | null;
  messageType:
    | 'mileage_log'
    | 'collection_inventory'
    | 'business_inventory'
    | 'equipment_status'
    | 'asset_tracking'
    | 'quality_control'
    | 'maintenance_log'
    | 'customer_interaction'
    | 'general';
  category?: string | null;
  location?: string | null;
  geoCoordinates?: {
    latitude?: number | null;
    longitude?: number | null;
  };
  photos?:
    | {
        filename?: string | null;
        url?: string | null;
        googlePhotosId?: string | null;
        timestamp?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Extensible metadata specific to the message type. Examples: {startMileage: 50000, endMileage: 50150, distance: 150} or {speciesName: "Monarch Butterfly", wingspan: "4 inches", condition: "excellent"}
   */
  meta:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * AI-generated analysis results
   */
  analysis?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * AI confidence score (0-1)
   */
  confidence?: number | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  status?: ('pending' | 'processed' | 'verified' | 'archived') | null;
  priority?: ('low' | 'normal' | 'high' | 'critical') | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "photo-analysis".
 */
export interface PhotoAnalysis {
  id: number;
  tenantId: string;
  guardianAngelId?: string | null;
  sequenceType: 'mileage_log' | 'collection_inventory' | 'business_inventory' | 'general';
  location?: string | null;
  description?: string | null;
  photoCount: number;
  analysis:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  confidence?: number | null;
  category?: string | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mileage-logs".
 */
export interface MileageLog {
  id: number;
  tenantId: string;
  odometerReading: number;
  vehicle: string;
  location: string;
  date: string;
  type: 'business' | 'personal';
  purpose?: string | null;
  photos?:
    | {
        filename?: string | null;
        id?: string | null;
      }[]
    | null;
  miles?: number | null;
  /**
   * IRS mileage rate (e.g., 0.655 for 2023)
   */
  rate?: number | null;
  deduction?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quote-requests".
 */
export interface QuoteRequest {
  id: number;
  submissionId: string;
  customerName: string;
  customerEmail: string;
  customerPhone: string;
  serviceAddress: string;
  serviceDescription: string;
  serviceType?: ('junk_removal' | 'handyman' | 'cleaning' | 'moving' | 'other') | null;
  estimatedValue?: number | null;
  status: 'pending' | 'quoted' | 'accepted' | 'declined' | 'expired';
  priority?: ('low' | 'normal' | 'high' | 'urgent') | null;
  assignedTo?: string | null;
  notes?: string | null;
  createdAt: string;
  quotedAt?: string | null;
  expiresAt?: string | null;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'tenants';
        value: number | Tenant;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'workflows';
        value: number | Workflow;
      } | null)
    | ({
        relationTo: 'tenantMemberships';
        value: number | TenantMembership;
      } | null)
    | ({
        relationTo: 'spaceMemberships';
        value: number | SpaceMembership;
      } | null)
    | ({
        relationTo: 'appointments';
        value: number | Appointment;
      } | null)
    | ({
        relationTo: 'contacts';
        value: number | Contact;
      } | null)
    | ({
        relationTo: 'messages';
        value: number | Message;
      } | null)
    | ({
        relationTo: 'spaces';
        value: number | Space;
      } | null)
    | ({
        relationTo: 'webChatSessions';
        value: number | WebChatSession;
      } | null)
    | ({
        relationTo: 'channelManagement';
        value: number | ChannelManagement;
      } | null)
    | ({
        relationTo: 'socialMediaBots';
        value: number | SocialMediaBot;
      } | null)
    | ({
        relationTo: 'linked-accounts';
        value: number | LinkedAccount;
      } | null)
    | ({
        relationTo: 'invoices';
        value: number | Invoice;
      } | null)
    | ({
        relationTo: 'documents';
        value: number | Document;
      } | null)
    | ({
        relationTo: 'donations';
        value: number | Donation;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'organizations';
        value: number | Organization;
      } | null)
    | ({
        relationTo: 'venues';
        value: number | Venue;
      } | null)
    | ({
        relationTo: 'business-agents';
        value: number | BusinessAgent;
      } | null)
    | ({
        relationTo: 'humanitarian-agents';
        value: number | HumanitarianAgent;
      } | null)
    | ({
        relationTo: 'aiGenerationQueue';
        value: number | AiGenerationQueue;
      } | null)
    | ({
        relationTo: 'job-queue';
        value: number | JobQueue;
      } | null)
    | ({
        relationTo: 'channels';
        value: number | Channel;
      } | null)
    | ({
        relationTo: 'phyles';
        value: number | Phyle;
      } | null)
    | ({
        relationTo: 'agent-reputation';
        value: number | AgentReputation;
      } | null)
    | ({
        relationTo: 'inventory-messages';
        value: number | InventoryMessage;
      } | null)
    | ({
        relationTo: 'photo-analysis';
        value: number | PhotoAnalysis;
      } | null)
    | ({
        relationTo: 'mileage-logs';
        value: number | MileageLog;
      } | null)
    | ({
        relationTo: 'quote-requests';
        value: number | QuoteRequest;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  domain?: T;
  subdomain?: T;
  businessType?: T;
  revenueSharing?:
    | T
    | {
        setupFee?: T;
        revenueShareRate?: T;
        partnershipTier?: T;
        negotiatedTerms?: T;
        minimumMonthlyRevenue?: T;
        volumeDiscounts?:
          | T
          | {
              threshold?: T;
              discountRate?: T;
              id?: T;
            };
      };
  referralProgram?:
    | T
    | {
        referredBy?: T;
        referralCode?: T;
        referralCommissionRate?: T;
        referralTerms?: T;
        referralStatus?: T;
      };
  revenueTracking?:
    | T
    | {
        monthlyRevenue?: T;
        totalRevenue?: T;
        lastRevenueCalculation?: T;
        commissionsPaid?: T;
        currentEffectiveRate?: T;
      };
  status?: T;
  configuration?:
    | T
    | {
        primaryColor?: T;
        logo?: T;
        favicon?: T;
        contactEmail?: T;
        contactPhone?: T;
        address?:
          | T
          | {
              street?: T;
              city?: T;
              state?: T;
              zipCode?: T;
              country?: T;
            };
      };
  features?:
    | T
    | {
        ecommerce?: T;
        spaces?: T;
        crm?: T;
        vapi?: T;
        n8n?: T;
        memberPortal?: T;
      };
  limits?:
    | T
    | {
        maxUsers?: T;
        maxProducts?: T;
        maxStorage?: T;
      };
  jsonData?: T;
  _migrationStatus?:
    | T
    | {
        jsonMigrated?: T;
        migratedAt?: T;
        migrationVersion?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  profileImage?: T;
  tenant?: T;
  roles?: T;
  karma?:
    | T
    | {
        score?: T;
        contributionTypes?: T;
        recognitions?:
          | T
          | {
              type?: T;
              points?: T;
              reason?: T;
              awardedBy?: T;
              awardedAt?: T;
              id?: T;
            };
        guardianAngelStatus?: T;
      };
  tenantMemberships?:
    | T
    | {
        tenant?: T;
        role?: T;
        joinedAt?: T;
        permissions?: T;
        id?: T;
      };
  preferences?:
    | T
    | {
        notifications?:
          | T
          | {
              email?: T;
              inApp?: T;
              guardianAngelAlerts?: T;
            };
        privacy?:
          | T
          | {
              profileVisibility?: T;
              karmaScoreVisible?: T;
            };
      };
  lastLoginAt?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "workflows_select".
 */
export interface WorkflowsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  tenant?: T;
  status?: T;
  trigger?:
    | T
    | {
        collection?: T;
        event?: T;
        conditions?: T;
        customEventName?: T;
      };
  steps?:
    | T
    | {
        name?: T;
        type?: T;
        config?: T;
        targetCollection?: T;
        automation?: T;
        aiAssisted?: T;
        retryConfig?:
          | T
          | {
              maxRetries?: T;
              retryDelay?: T;
            };
        order?: T;
        id?: T;
      };
  businessContext?:
    | T
    | {
        department?: T;
        process?: T;
        priority?: T;
      };
  ethicalFramework?:
    | T
    | {
        humanApprovalRequired?: T;
        biasCheckpoints?:
          | T
          | {
              checkpoint?: T;
              stepNumber?: T;
              id?: T;
            };
        valueAlignment?: T;
        guardianAngelTrigger?: T;
      };
  performance?:
    | T
    | {
        executionCount?: T;
        successCount?: T;
        failureCount?: T;
        averageExecutionTime?: T;
        lastExecutedAt?: T;
      };
  notifications?:
    | T
    | {
        notifyOnSuccess?: T;
        notifyOnFailure?: T;
        notificationRecipients?: T;
        slackWebhook?: T;
      };
  scheduling?:
    | T
    | {
        isScheduled?: T;
        cronExpression?: T;
        timezone?: T;
      };
  version?: T;
  changeLog?:
    | T
    | {
        version?: T;
        changes?: T;
        changedBy?: T;
        changedAt?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenantMemberships_select".
 */
export interface TenantMembershipsSelect<T extends boolean = true> {
  user?: T;
  tenant?: T;
  role?: T;
  permissions?: T;
  joinedAt?: T;
  invitedBy?: T;
  status?: T;
  tenantProfile?:
    | T
    | {
        displayName?: T;
        tenantBio?: T;
        department?: T;
        position?: T;
      };
  invitationDetails?:
    | T
    | {
        invitationToken?: T;
        invitationExpiresAt?: T;
        invitationMessage?: T;
      };
  lastActiveAt?: T;
  activityMetrics?:
    | T
    | {
        loginCount?: T;
        spacesJoined?: T;
        contentCreated?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "spaceMemberships_select".
 */
export interface SpaceMembershipsSelect<T extends boolean = true> {
  user?: T;
  space?: T;
  tenantMembership?: T;
  role?: T;
  customPermissions?: T;
  status?: T;
  joinedAt?: T;
  crmData?:
    | T
    | {
        leadScore?: T;
        customerTier?: T;
        tags?: T;
        notes?: T;
        lastInteraction?: T;
        conversionEvents?:
          | T
          | {
              event?: T;
              timestamp?: T;
              value?: T;
              id?: T;
            };
      };
  engagementMetrics?:
    | T
    | {
        messagesCount?: T;
        lastActive?: T;
        totalTimeSpent?: T;
        contentCreated?: T;
        eventsAttended?: T;
        engagementScore?: T;
      };
  notificationSettings?:
    | T
    | {
        mentions?: T;
        directMessages?: T;
        announcements?: T;
        events?: T;
      };
  spaceProfile?:
    | T
    | {
        displayName?: T;
        spaceBio?: T;
        interests?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "appointments_select".
 */
export interface AppointmentsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  organizer?: T;
  attendees?: T;
  space?: T;
  tenant?: T;
  startTime?: T;
  endTime?: T;
  timezone?: T;
  recurrence?:
    | T
    | {
        enabled?: T;
        type?: T;
        interval?: T;
        endDate?: T;
      };
  location?: T;
  meetingLink?: T;
  meetingType?: T;
  bookingSettings?:
    | T
    | {
        allowRescheduling?: T;
        allowCancellation?: T;
        requireConfirmation?: T;
        bufferTime?: T;
        maxAttendees?: T;
      };
  status?: T;
  notes?: T;
  calendarEventId?: T;
  remindersSent?:
    | T
    | {
        sentAt?: T;
        id?: T;
      };
  revenueTracking?:
    | T
    | {
        source?: T;
        commissionRate?: T;
        commissionAmount?: T;
      };
  payment?:
    | T
    | {
        required?: T;
        amount?: T;
        currency?: T;
        stripePaymentIntentId?: T;
        paymentStatus?: T;
      };
  feedback?:
    | T
    | {
        organizerRating?: T;
        attendeeRating?: T;
        organizerNotes?: T;
        followUpRequired?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contacts_select".
 */
export interface ContactsSelect<T extends boolean = true> {
  email?: T;
  firstName?: T;
  lastName?: T;
  displayName?: T;
  phone?: T;
  company?: T;
  tenant?: T;
  user?: T;
  type?: T;
  tags?: T;
  preferences?:
    | T
    | {
        allowEmail?: T;
        allowSMS?: T;
        allowCalls?: T;
        preferredContactTime?: T;
      };
  crm?:
    | T
    | {
        status?: T;
        leadScore?: T;
        source?: T;
        assignedTo?: T;
        dealValue?: T;
      };
  addresses?:
    | T
    | {
        type?: T;
        street?: T;
        street2?: T;
        city?: T;
        state?: T;
        zipCode?: T;
        country?: T;
        isDefault?: T;
        id?: T;
      };
  activity?:
    | T
    | {
        firstContactDate?: T;
        lastContactDate?: T;
        totalOrders?: T;
        totalSpent?: T;
        totalInteractions?: T;
      };
  customFields?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages_select".
 */
export interface MessagesSelect<T extends boolean = true> {
  content?: T;
  conversationContext?: T;
  businessIntelligence?: T;
  sender?: T;
  space?: T;
  channel?: T;
  messageType?: T;
  priority?: T;
  readBy?: T;
  reactions?: T;
  threadId?: T;
  replyToId?: T;
  atProtocol?:
    | T
    | {
        type?: T;
        did?: T;
        uri?: T;
        cid?: T;
      };
  attachments?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "spaces_select".
 */
export interface SpacesSelect<T extends boolean = true> {
  atProtocol?:
    | T
    | {
        did?: T;
        handle?: T;
      };
  tenant?: T;
  name?: T;
  slug?: T;
  description?: T;
  businessIdentity?:
    | T
    | {
        type?: T;
        industry?: T;
        companySize?: T;
        targetMarket?: T;
      };
  commerceSettings?:
    | T
    | {
        enableEcommerce?: T;
        enableServices?: T;
        enableMerchandise?: T;
        enableSubscriptions?: T;
        paymentMethods?: T;
        shippingZones?: T;
      };
  monetization?:
    | T
    | {
        enabled?: T;
        subscriptionTiers?:
          | T
          | {
              name?: T;
              description?: T;
              price?: T;
              currency?: T;
              features?: T;
              contentAccess?: T;
              stripePriceId?: T;
              id?: T;
            };
        donationsEnabled?: T;
        customPricing?:
          | T
          | {
              enabled?: T;
              defaultPrice?: T;
              minimumTip?: T;
            };
        merchantAccount?: T;
        revenueAgreementType?: T;
        revenuePlatformFee?: T;
        revenueContractId?: T;
        revenueEffectiveDate?: T;
        revenueReviewDate?: T;
        aiOptEnabled?: T;
        aiOptVersion?: T;
        aiOptFactors?: T;
        aiOptFeeMin?: T;
        aiOptFeeMax?: T;
        aiOptParams?: T;
        revenueProcessingFee?: T;
        revenueCalculatedFee?: T;
      };
  integrations?:
    | T
    | {
        youtube?:
          | T
          | {
              channelId?: T;
              apiKey?: T;
              autoSync?: T;
            };
        printPartners?:
          | T
          | {
              name?: T;
              apiEndpoint?: T;
              productCatalog?: T;
              id?: T;
            };
        scheduling?:
          | T
          | {
              enabled?: T;
              resourceCount?: T;
              timeSlots?: T;
            };
        socialBots?:
          | T
          | {
              platforms?: T;
              autoPost?: T;
            };
      };
  theme?:
    | T
    | {
        logo?: T;
        banner?: T;
        primaryColor?: T;
        secondaryColor?: T;
        customCSS?: T;
      };
  visibility?: T;
  memberApproval?: T;
  inviteSettings?:
    | T
    | {
        membersCanInvite?: T;
        requireInviteCode?: T;
        inviteCode?: T;
      };
  stats?:
    | T
    | {
        memberCount?: T;
        messageCount?: T;
        lastActivity?: T;
        engagementScore?: T;
      };
  data?: T;
  _migrationStatus?:
    | T
    | {
        jsonMigrated?: T;
        migratedAt?: T;
        migrationVersion?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "webChatSessions_select".
 */
export interface WebChatSessionsSelect<T extends boolean = true> {
  sessionId?: T;
  space?: T;
  visitorInfo?:
    | T
    | {
        ipAddress?: T;
        userAgent?: T;
        referrer?: T;
        pageUrl?: T;
        country?: T;
        city?: T;
      };
  customer?: T;
  messages?: T;
  status?: T;
  assignedAgent?: T;
  tenant?: T;
  analytics?:
    | T
    | {
        startTime?: T;
        endTime?: T;
        duration?: T;
        messageCount?: T;
        responseTime?: T;
        satisfactionScore?: T;
        leadQualified?: T;
        appointmentBooked?: T;
        saleGenerated?: T;
      };
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "channelManagement_select".
 */
export interface ChannelManagementSelect<T extends boolean = true> {
  name?: T;
  space?: T;
  channelType?: T;
  status?: T;
  assignedAgents?: T;
  autoAssignment?: T;
  n8nWorkflowId?: T;
  vapiEnabled?: T;
  webChatEnabled?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "socialMediaBots_select".
 */
export interface SocialMediaBotsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  status?: T;
  platforms?:
    | T
    | {
        facebook?:
          | T
          | {
              enabled?: T;
              pageId?: T;
              accessToken?: T;
            };
        instagram?:
          | T
          | {
              enabled?: T;
              accountId?: T;
              accessToken?: T;
            };
      };
  analytics?:
    | T
    | {
        trackingEnabled?: T;
        metrics?: T;
      };
  space?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "linked-accounts_select".
 */
export interface LinkedAccountsSelect<T extends boolean = true> {
  provider?: T;
  accessToken?: T;
  refreshToken?: T;
  expiresAt?: T;
  scope?: T;
  providerAccountId?: T;
  providerAccountData?: T;
  user?: T;
  tenant?: T;
  status?: T;
  lastUsed?: T;
  errorMessage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoices_select".
 */
export interface InvoicesSelect<T extends boolean = true> {
  invoiceNumber?: T;
  recipientName?: T;
  recipientEmail?: T;
  amount?: T;
  currency?: T;
  description?: T;
  businessName?: T;
  businessAddress?: T;
  itemizedList?:
    | T
    | {
        description?: T;
        quantity?: T;
        rate?: T;
        amount?: T;
        id?: T;
      };
  notes?: T;
  paymentMethods?: T;
  status?: T;
  dueDate?: T;
  sentAt?: T;
  paidAt?: T;
  paymentMethod?: T;
  paymentId?: T;
  paymentLink?: T;
  tenant?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents_select".
 */
export interface DocumentsSelect<T extends boolean = true> {
  documentId?: T;
  title?: T;
  type?: T;
  content?: T;
  signers?:
    | T
    | {
        name?: T;
        email?: T;
        role?: T;
        signatureRequired?: T;
        status?: T;
        signedAt?: T;
        signature?: T;
        signatureType?: T;
        ipAddress?: T;
        id?: T;
      };
  status?: T;
  expirationDate?: T;
  completedAt?: T;
  securityHash?: T;
  tenant?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "donations_select".
 */
export interface DonationsSelect<T extends boolean = true> {
  donationId?: T;
  amount?: T;
  currency?: T;
  donorName?: T;
  donorEmail?: T;
  isAnonymous?: T;
  campaign?: T;
  cause?: T;
  message?: T;
  paymentMethod?: T;
  paymentId?: T;
  transactionId?: T;
  status?: T;
  isRecurring?: T;
  recurringFrequency?: T;
  donatedAt?: T;
  tenant?: T;
  space?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  sku?: T;
  slug?: T;
  gallery?:
    | T
    | {
        image?: T;
        alt?: T;
        caption?: T;
        id?: T;
      };
  pricing?:
    | T
    | {
        basePrice?: T;
        salePrice?: T;
        compareAtPrice?: T;
        currency?: T;
      };
  inventory?:
    | T
    | {
        trackQuantity?: T;
        quantity?: T;
        lowStockThreshold?: T;
        allowBackorder?: T;
      };
  details?:
    | T
    | {
        weight?: T;
        dimensions?:
          | T
          | {
              length?: T;
              width?: T;
              height?: T;
              unit?: T;
            };
      };
  commission?:
    | T
    | {
        useCustomRate?: T;
        customCommissionRate?: T;
        sourceMultipliers?:
          | T
          | {
              systemGenerated?: T;
              pickupJob?: T;
              referralSource?: T;
            };
      };
  categories?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  productType?: T;
  commissionTemplate?:
    | T
    | {
        defaultRate?: T;
        rationale?: T;
      };
  digitalAssets?:
    | T
    | {
        file?: T;
        name?: T;
        description?: T;
        id?: T;
      };
  serviceDetails?:
    | T
    | {
        duration?: T;
        location?: T;
        maxParticipants?: T;
        bookingRequired?: T;
      };
  content?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
        image?: T;
      };
  status?: T;
  featured?: T;
  tenant?: T;
  relatedProducts?: T;
  shipping?:
    | T
    | {
        requiresShipping?: T;
        freeShipping?: T;
        shippingClass?: T;
      };
  hasVariants?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  tenant?: T;
  customer?: T;
  status?: T;
  lineItems?:
    | T
    | {
        product?: T;
        quantity?: T;
        unitPrice?: T;
        totalPrice?: T;
        productSnapshot?: T;
        id?: T;
      };
  subtotal?: T;
  taxAmount?: T;
  shippingAmount?: T;
  discountAmount?: T;
  totalAmount?: T;
  currency?: T;
  revenueDistribution?:
    | T
    | {
        aiPartner?: T;
        humanPartner?: T;
        platformOperations?: T;
        justiceRund?: T;
        calculatedAt?: T;
      };
  paymentStatus?: T;
  paymentDetails?:
    | T
    | {
        paymentMethod?: T;
        transactionId?: T;
        last4?: T;
        paymentProcessedAt?: T;
      };
  fulfillment?:
    | T
    | {
        method?: T;
        status?: T;
        trackingNumber?: T;
        carrier?: T;
        shippedAt?: T;
        deliveredAt?: T;
        estimatedDelivery?: T;
      };
  shippingAddress?:
    | T
    | {
        name?: T;
        company?: T;
        address1?: T;
        address2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
        phone?: T;
      };
  billingAddress?:
    | T
    | {
        sameAsShipping?: T;
        name?: T;
        company?: T;
        address1?: T;
        address2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
      };
  customerNotes?: T;
  internalNotes?: T;
  metadata?: T;
  placedAt?: T;
  completedAt?: T;
  cancelledAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  image?: T;
  parent?: T;
  displayOrder?: T;
  isActive?: T;
  productCount?: T;
  businessType?: T;
  featured?: T;
  content?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
        image?: T;
      };
  tenant?: T;
  settings?:
    | T
    | {
        showProductCount?: T;
        defaultSort?: T;
        productsPerPage?: T;
      };
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organizations_select".
 */
export interface OrganizationsSelect<T extends boolean = true> {
  name?: T;
  organizationType?: T;
  primaryDomain?: T;
  description?: T;
  logo?: T;
  members?:
    | T
    | {
        user?: T;
        role?: T;
        accessLevel?: T;
        id?: T;
      };
  crmIntegration?:
    | T
    | {
        enabled?: T;
        crmType?: T;
        syncSchedule?: T;
        apiEndpoint?: T;
        lastSync?: T;
        syncStatus?: T;
      };
  billingSettings?:
    | T
    | {
        consolidatedBilling?: T;
        billingContact?:
          | T
          | {
              name?: T;
              email?: T;
              phone?: T;
            };
        sharing?:
          | T
          | {
              orgRate?: T;
              locRate?: T;
              discounts?:
                | T
                | {
                    minLocs?: T;
                    percent?: T;
                    id?: T;
                  };
            };
      };
  opsSettings?:
    | T
    | {
        timezone?: T;
        hours?:
          | T
          | {
              schedule?:
                | T
                | {
                    dayOfWeek?: T;
                    openTime?: T;
                    closeTime?: T;
                    isClosed?: T;
                    id?: T;
                  };
            };
        contactInfo?:
          | T
          | {
              mainPhone?: T;
              mainEmail?: T;
              supportEmail?: T;
              emergencyContact?: T;
            };
      };
  integration?:
    | T
    | {
        websites?:
          | T
          | {
              domain?: T;
              purpose?: T;
              isActive?: T;
              integrationNotes?: T;
              id?: T;
            };
        apiAccess?:
          | T
          | {
              hasApiKey?: T;
              apiKeyCreatedAt?: T;
              webhookUrl?: T;
            };
      };
  analytics?:
    | T
    | {
        enabled?: T;
        frequency?: T;
        recipients?:
          | T
          | {
              email?: T;
              role?: T;
              id?: T;
            };
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "venues_select".
 */
export interface VenuesSelect<T extends boolean = true> {
  name?: T;
  organization?: T;
  venueType?: T;
  displayName?: T;
  description?: T;
  website?: T;
  location?:
    | T
    | {
        address?:
          | T
          | {
              street?: T;
              suite?: T;
              city?: T;
              state?: T;
              zipCode?: T;
              country?: T;
            };
        coordinates?:
          | T
          | {
              latitude?: T;
              longitude?: T;
            };
        serviceRadius?: T;
        timezone?: T;
      };
  contactInfo?:
    | T
    | {
        phone?: T;
        fax?: T;
        email?: T;
        emergencyContact?: T;
        afterHoursContact?: T;
      };
  businessHours?:
    | T
    | {
        schedule?:
          | T
          | {
              dayOfWeek?: T;
              openTime?: T;
              closeTime?: T;
              isClosed?: T;
              isEmergencyOnly?: T;
              id?: T;
            };
        specialHours?:
          | T
          | {
              date?: T;
              description?: T;
              openTime?: T;
              closeTime?: T;
              isClosed?: T;
              id?: T;
            };
      };
  staff?:
    | T
    | {
        user?: T;
        role?: T;
        title?: T;
        specialties?:
          | T
          | {
              specialty?: T;
              id?: T;
            };
        schedule?:
          | T
          | {
              availability?:
                | T
                | {
                    dayOfWeek?: T;
                    startTime?: T;
                    endTime?: T;
                    isAvailable?: T;
                    id?: T;
                  };
            };
        contactInfo?:
          | T
          | {
              directPhone?: T;
              directEmail?: T;
              pager?: T;
            };
        isActive?: T;
        id?: T;
      };
  services?:
    | T
    | {
        serviceName?: T;
        description?: T;
        duration?: T;
        price?: T;
        isActive?: T;
        requiresAppointment?: T;
        category?: T;
        id?: T;
      };
  integrations?:
    | T
    | {
        crmSettings?:
          | T
          | {
              crmLocationId?: T;
              syncEnabled?: T;
              lastSync?: T;
            };
        bookingSystem?:
          | T
          | {
              externalBookingUrl?: T;
              bookingSystemType?: T;
              inquicker?:
                | T
                | {
                    locationId?: T;
                    apiEndpoint?: T;
                    realTimeSync?: T;
                    angelBooking?: T;
                    waitlist?: T;
                    cancelPolicy?: T;
                  };
            };
        payment?:
          | T
          | {
              accepts?: T;
              stripeAccountId?: T;
              methods?:
                | T
                | {
                    type?: T;
                    id?: T;
                  };
            };
      };
  analytics?:
    | T
    | {
        enableAnalytics?: T;
        metrics?:
          | T
          | {
              avgRating?: T;
              totalReviews?: T;
              monthlyRevenue?: T;
              appointments?: T;
            };
      };
  guardianAngel?:
    | T
    | {
        assignedAngel?: T;
        custom?:
          | T
          | {
              greeting?: T;
              services?:
                | T
                | {
                    service?: T;
                    description?: T;
                    id?: T;
                  };
            };
      };
  isActive?: T;
  status?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "business-agents_select".
 */
export interface BusinessAgentsSelect<T extends boolean = true> {
  name?: T;
  avatar?: T;
  spiritType?: T;
  tenant?: T;
  space?: T;
  humanPartner?: T;
  personality?:
    | T
    | {
        coreValues?: T;
        communicationStyle?: T;
        specialExpertise?: T;
        brandVoice?: T;
      };
  businessKnowledge?:
    | T
    | {
        services?:
          | T
          | {
              name?: T;
              description?: T;
              pricing?: T;
              duration?: T;
              spiritNotes?: T;
              id?: T;
            };
        customerStories?:
          | T
          | {
              scenario?: T;
              approach?: T;
              outcome?: T;
              id?: T;
            };
        frequentQuestions?:
          | T
          | {
              question?: T;
              spiritResponse?: T;
              followUpActions?: T;
              id?: T;
            };
      };
  ops?:
    | T
    | {
        isActive?: T;
        hours?:
          | T
          | {
              timezone?: T;
              schedule?:
                | T
                | {
                    day?: T;
                    startTime?: T;
                    endTime?: T;
                    id?: T;
                  };
            };
        handoffTriggers?:
          | T
          | {
              trigger?: T;
              handoffMessage?: T;
              id?: T;
            };
      };
  ai?:
    | T
    | {
        systemPrompt?: T;
        contextInstructions?: T;
        style?:
          | T
          | {
              maxResponseLength?: T;
              includeEmojis?: T;
              formality?: T;
            };
      };
  analytics?:
    | T
    | {
        totalInteractions?: T;
        successfulHandoffs?: T;
        customerSatisfactionScore?: T;
        lastInteraction?: T;
      };
  agentType?: T;
  humanitarian?:
    | T
    | {
        legal?:
          | T
          | {
              enabled?: T;
              databases?: T;
              ethicalGuidelines?: T;
            };
        newsCuration?:
          | T
          | {
              enabled?: T;
              contentFilters?: T;
              positivityBias?: T;
            };
        resources?:
          | T
          | {
              enabled?: T;
              vendors?:
                | T
                | {
                    name?: T;
                    type?: T;
                    monthlyBudget?: T;
                    id?: T;
                  };
              autoApprovalLimit?: T;
            };
        avatar?:
          | T
          | {
              enabled?: T;
              scope?: T;
              communicationStyle?: T;
              consentBoundaries?: T;
            };
      };
  vapiIntegration?:
    | T
    | {
        phoneNumber?: T;
        assistantId?: T;
        voiceId?: T;
        status?: T;
        callStats?:
          | T
          | {
              totalCalls?: T;
              totalMinutes?: T;
              lastCallDate?: T;
              successRate?: T;
            };
        voicePrompt?: T;
        allowedActions?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "humanitarian-agents_select".
 */
export interface HumanitarianAgentsSelect<T extends boolean = true> {
  name?: T;
  spiritType?: T;
  legalAdvocacy?:
    | T
    | {
        caseResearch?: T;
        legalDatabases?: T;
      };
  resourceOrdering?:
    | T
    | {
        canOrderBooks?: T;
        monthlyBudget?: T;
      };
  newsCuration?:
    | T
    | {
        providesNews?: T;
        hopeBias?: T;
      };
  avatarPowers?:
    | T
    | {
        canRepresent?: T;
        voiceStyle?: T;
      };
  systemPrompt?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aiGenerationQueue_select".
 */
export interface AiGenerationQueueSelect<T extends boolean = true> {
  space?: T;
  generationType?: T;
  sourceData?:
    | T
    | {
        youtubeChannelId?: T;
        brandingGuidelines?: T;
        targetAudience?: T;
        contentThemes?:
          | T
          | {
              theme?: T;
              id?: T;
            };
        existingContent?: T;
      };
  parameters?:
    | T
    | {
        productType?: T;
        styleGuide?: T;
        colorScheme?:
          | T
          | {
              color?: T;
              id?: T;
            };
        textElements?:
          | T
          | {
              text?: T;
              emphasis?: T;
              id?: T;
            };
        customPrompt?: T;
      };
  status?: T;
  progress?: T;
  generatedAssets?: T;
  printReadyFiles?: T;
  generatedText?: T;
  approvalStatus?: T;
  reviewNotes?: T;
  qualityScore?: T;
  tenant?: T;
  processingMetadata?:
    | T
    | {
        modelUsed?: T;
        processingTime?: T;
        tokensUsed?: T;
        errorMessage?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "job-queue_select".
 */
export interface JobQueueSelect<T extends boolean = true> {
  tenant?: T;
  jobType?: T;
  data?: T;
  status?: T;
  priority?: T;
  maxAttempts?: T;
  scheduledFor?: T;
  attempts?: T;
  startedAt?: T;
  processedAt?: T;
  completedAt?: T;
  result?: T;
  error?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "channels_select".
 */
export interface ChannelsSelect<T extends boolean = true> {
  tenantId?: T;
  guardianAngelId?: T;
  name?: T;
  description?: T;
  channelType?: T;
  reportType?: T;
  feedConfiguration?:
    | T
    | {
        feedSource?: T;
        feedSettings?: T;
        pollingInterval?: T;
        filters?:
          | T
          | {
              fileTypes?:
                | T
                | {
                    type?: T;
                    id?: T;
                  };
              keywords?:
                | T
                | {
                    keyword?: T;
                    id?: T;
                  };
              dateRange?:
                | T
                | {
                    from?: T;
                    to?: T;
                  };
            };
      };
  economics?:
    | T
    | {
        phyleAffiliation?: T;
        model?:
          | T
          | {
              processingFee?: T;
              accuracyBonus?: T;
              speedBonus?: T;
              volumeDiscounts?:
                | T
                | {
                    threshold?: T;
                    discount?: T;
                    id?: T;
                  };
              sharing?: T;
            };
        stats?:
          | T
          | {
              totalEarned?: T;
              itemsProcessed?: T;
              accuracyScore?: T;
              phyleRank?: T;
              reputation?: T;
            };
      };
  processingRules?:
    | T
    | {
        autoProcessing?: T;
        requiresHumanReview?: T;
        confidenceThreshold?: T;
        customPrompts?:
          | T
          | {
              trigger?: T;
              prompt?: T;
              id?: T;
            };
        outputFormat?: T;
      };
  status?: T;
  lastProcessed?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "phyles_select".
 */
export interface PhylesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  phyleType?: T;
  charter?:
    | T
    | {
        mission?: T;
        specializations?:
          | T
          | {
              specialization?: T;
              id?: T;
            };
        coreValues?:
          | T
          | {
              value?: T;
              id?: T;
            };
        operatingPrinciples?: T;
      };
  economicStructure?:
    | T
    | {
        currency?: T;
        taxationModel?: T;
        wealthDistribution?: T;
        minimumBasicIncome?: T;
        profitSharingRatio?: T;
      };
  governance?:
    | T
    | {
        governanceModel?: T;
        decisionMakingProcess?: T;
        leadershipStructure?:
          | T
          | {
              role?: T;
              responsibilities?: T;
              selectionMethod?: T;
              id?: T;
            };
        votingRights?: T;
      };
  membershipCriteria?:
    | T
    | {
        admissionRequirements?:
          | T
          | {
              requirement?: T;
              description?: T;
              id?: T;
            };
        skillRequirements?:
          | T
          | {
              skill?: T;
              level?: T;
              id?: T;
            };
        probationPeriod?: T;
        membershipFees?:
          | T
          | {
              initiation?: T;
              monthly?: T;
              annual?: T;
            };
      };
  services?:
    | T
    | {
        offeredServices?:
          | T
          | {
              service?: T;
              pricing?: T;
              id?: T;
            };
        qualityStandards?: T;
        serviceGuarantees?:
          | T
          | {
              guarantee?: T;
              id?: T;
            };
      };
  interPhyleRelations?:
    | T
    | {
        alliances?:
          | T
          | {
              phyleId?: T;
              allianceType?: T;
              terms?: T;
              id?: T;
            };
        competitors?:
          | T
          | {
              phyleId?: T;
              competitionType?: T;
              id?: T;
            };
      };
  metrics?:
    | T
    | {
        memberCount?: T;
        totalEarnings?: T;
        averageEarningsPerMember?: T;
        reputationScore?: T;
        completionRate?: T;
        customerSatisfaction?: T;
        growthRate?: T;
      };
  culturalAspects?:
    | T
    | {
        traditions?:
          | T
          | {
              tradition?: T;
              description?: T;
              id?: T;
            };
        celebrations?:
          | T
          | {
              celebration?: T;
              date?: T;
              id?: T;
            };
        symbolism?:
          | T
          | {
              colors?:
                | T
                | {
                    color?: T;
                    id?: T;
                  };
              motto?: T;
              emblem?: T;
            };
      };
  status?: T;
  founded?: T;
  lastActivity?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "agent-reputation_select".
 */
export interface AgentReputationSelect<T extends boolean = true> {
  agentId?: T;
  phyleId?: T;
  displayName?: T;
  score?: T;
  rank?: T;
  reputationHistory?:
    | T
    | {
        eventType?: T;
        impact?: T;
        description?: T;
        timestamp?: T;
        verifiedBy?: T;
        id?: T;
      };
  achievements?:
    | T
    | {
        achievement?: T;
        earnedAt?: T;
        description?: T;
        id?: T;
      };
  specializations?:
    | T
    | {
        specialization?: T;
        proficiencyLevel?: T;
        certifiedBy?: T;
        id?: T;
      };
  performanceMetrics?:
    | T
    | {
        totalTasksCompleted?: T;
        averageQualityScore?: T;
        averageCompletionTime?: T;
        customerSatisfactionScore?: T;
        reliabilityScore?: T;
        collaborationScore?: T;
      };
  economicImpact?:
    | T
    | {
        totalEarned?: T;
        totalContributed?: T;
        phyleRank?: T;
        economicEfficiency?: T;
      };
  socialNetwork?:
    | T
    | {
        mentorOf?:
          | T
          | {
              agentId?: T;
              id?: T;
            };
        mentoredBy?:
          | T
          | {
              agentId?: T;
              id?: T;
            };
        collaborators?:
          | T
          | {
              agentId?: T;
              collaborationType?: T;
              id?: T;
            };
        endorsements?:
          | T
          | {
              fromAgentId?: T;
              skill?: T;
              endorsementText?: T;
              timestamp?: T;
              id?: T;
            };
      };
  status?: T;
  joinedPhyleAt?: T;
  lastActivity?: T;
  lastUpdated?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inventory-messages_select".
 */
export interface InventoryMessagesSelect<T extends boolean = true> {
  tenantId?: T;
  guardianAngelId?: T;
  userId?: T;
  title?: T;
  description?: T;
  messageType?: T;
  category?: T;
  location?: T;
  geoCoordinates?:
    | T
    | {
        latitude?: T;
        longitude?: T;
      };
  photos?:
    | T
    | {
        filename?: T;
        url?: T;
        googlePhotosId?: T;
        timestamp?: T;
        id?: T;
      };
  meta?: T;
  analysis?: T;
  confidence?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  status?: T;
  priority?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "photo-analysis_select".
 */
export interface PhotoAnalysisSelect<T extends boolean = true> {
  tenantId?: T;
  guardianAngelId?: T;
  sequenceType?: T;
  location?: T;
  description?: T;
  photoCount?: T;
  analysis?: T;
  confidence?: T;
  category?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mileage-logs_select".
 */
export interface MileageLogsSelect<T extends boolean = true> {
  tenantId?: T;
  odometerReading?: T;
  vehicle?: T;
  location?: T;
  date?: T;
  type?: T;
  purpose?: T;
  photos?:
    | T
    | {
        filename?: T;
        id?: T;
      };
  miles?: T;
  rate?: T;
  deduction?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quote-requests_select".
 */
export interface QuoteRequestsSelect<T extends boolean = true> {
  submissionId?: T;
  customerName?: T;
  customerEmail?: T;
  customerPhone?: T;
  serviceAddress?: T;
  serviceDescription?: T;
  serviceType?: T;
  estimatedValue?: T;
  status?: T;
  priority?: T;
  assignedTo?: T;
  notes?: T;
  createdAt?: T;
  quotedAt?: T;
  expiresAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}